<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="meta_stddicary">

	<!-- 공통 표준 세트  -->
	<sql id="cmmn_std_set_list">
		select t1.std_set_sn     
			, t1.wrd_sn         
			, t1.wrd_nm         
			, t1.wrd_eng_nm     
			, t1.wrd_eng_abrv_nm
			, t1.prhibt_yn
			, t1.std_wrd_nm
			, t1.rel_wrd_nm  
			, t1.wrd_cn 
			, t1.wrd_ty_cd
			, t1.use_yn 
			, t1.aprv_sttus_cd
			, t3.std_set_nm
		from META_WRD t1
			, (
				select 
					std_set_sn
					, std_set_nm
				from 
					META_STD_SET
				where 
					std_set_ty_cd = 'COMMON'
			) t3
		where t1.std_set_sn = t3.std_set_sn 
	</sql>
	
	<!-- 표준 세트 명 -->
	<sql id="my_std_set_nm">
		select t2.std_set_sn
			, t2.std_set_nm 
		from META_PRJCT_STD_SET t1 
			, META_STD_SET t2 
		where t1.std_set_sn = t2.std_set_sn
			and t1.prjct_sn = #{prjctSn} 
			and t2.std_set_ty_cd = 'NONE'
		union
		select t2.std_set_sn
			, t2.std_set_nm
		from
			META_STD_SET t2
		where t2.std_set_ty_cd = 'COMMON' 
	</sql>
	
	<!-- 단어 이력 테이블 cnt 
	<sql id="wrd_hist_sn_cnt">
		select std_set_sn
			, wrd_sn
			, wrd_hist_sn
			, aprv_sttus_cd
			, row_number() over(partition by std_set_sn, wrd_sn order by wrd_hist_sn desc) as wrd_hist_sn_cnt
		from META_WRD_HIST
	</sql>-->
	<!-- 도메인 이력 테이블 cnt 
	<sql id="domn_hist_sn_cnt">
		select std_set_sn
			, domn_sn
			, domn_hist_sn
			, aprv_sttus_cd
			, row_number() over(partition by std_set_sn, domn_sn order by domn_hist_sn desc) as domn_hist_sn_cnt
		from META_DOMN_HIST
	</sql>-->
	<!-- 용어 이력 테이블 cnt 
	<sql id="word_hist_sn_cnt">
		select
			std_set_sn
			, word_sn
			, word_hist_sn
			, aprv_sttus_cd
			, row_number() over(partition by std_set_sn, word_sn order by	word_hist_sn desc) as word_hist_sn_cnt
		from META_WORD_HIST
	</sql>-->	
	
	<!-- 표준사전 단어 목록 조회 -->
	<sql id="where_selectStdDicaryWrdList">
		<if test="aprvSttusCdArrList != '' and aprvSttusCdArrList != null ">
			<if test="!aprvSttusCdArrList.isEmpty()">
			and g.aprv_sttus_cd in 
				<foreach collection="aprvSttusCdArrList" item="item" open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
		</if>
		<if test="stdSetNmArrList != '' and stdSetNmArrList != null ">
			<if test="!stdSetNmArrList.isEmpty()">
			and g.std_set_sn in 
				<foreach collection="stdSetNmArrList" item="item" open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
		</if>
		<if test="prhibtYn != '' and prhibtYn != null ">
		 	and g.prhibt_yn = #{prhibtYn}
		</if>
		<if test="wrdTyCd != '' and wrdTyCd != null ">
		 	and g.wrd_ty_cd = #{wrdTyCd}
		</if>
		<if test="wrdNm != '' and wrdNm != null ">
		 	and (
		 		g.wrd_nm like #{wrdNm}
		 		or g.std_wrd_nm like #{wrdNm}
		 		or g.rel_wrd_nm like #{wrdNm}
		 	)
		</if>		
		<if test="wrdEngNm != '' and wrdEngNm != null ">
			<!-- and g.wrd_eng_nm like CONCAT('%',#{wrdEngNm},'%') -->
			and g.wrd_eng_nm like #{wrdEngNm}
		</if>
		<if test="wrdEngAbrvNm != '' and wrdEngAbrvNm != null ">
		 	and g.wrd_eng_abrv_nm like #{wrdEngAbrvNm}
		</if>
		<if test="wrdCn != '' and wrdCn != null ">
		 	and g.wrd_cn like CONCAT('%',#{wrdCn},'%')
		</if>
	</sql>
	<select id="selectStdDicaryWrdList" resultType="sangsMap" parameterType="map">
		select * from 
			(
			select 
				t1.std_set_sn     
				, t1.wrd_sn         
				, t1.wrd_nm         
				, t1.wrd_eng_nm     
				, t1.wrd_eng_abrv_nm
				, t1.prhibt_yn
				, t1.std_wrd_nm
				, t1.rel_wrd_nm  
				, t1.wrd_cn 
				, t1.wrd_ty_cd
				, t1.use_yn  
				, t1.aprv_sttus_cd
				/*, fn_get_cmmn_code_nm('PROCSECD', t1.prcs_se_cd) as prcs_se_cd_nm*/
				, '' as prcs_se_cd_nm
				, t1.prcs_se_cd
				, t3.std_set_nm
			FROM META_WRD t1 
			join (
				<include refid="my_std_set_nm"/>
			) t3 on t1.std_set_sn = t3.std_set_sn
		) g
		where 1 = 1
		and g.use_yn ='Y'
		<include refid="where_selectStdDicaryWrdList"/>
		order by g.wrd_nm
		<if test='excelYn !="Y"'>
		limit #{pageSize} offset #{offset}
		</if>
	</select>
	
	<!-- 표준사전 단어 목록 count 조회 -->
	<select id="selectStdDicaryWrdListCnt" resultType="Integer" parameterType="map">
		select count(*) as cnt from 
			(
			select 
				t1.std_set_sn     
				, t1.wrd_sn         
				, t1.wrd_nm         
				, t1.wrd_eng_nm     
				, t1.wrd_eng_abrv_nm
				, t1.prhibt_yn
				, t1.std_wrd_nm
				, t1.rel_wrd_nm  
				, t1.wrd_cn 
				, t1.wrd_ty_cd  
				, t1.use_yn  
				, t1.aprv_sttus_cd
				/*, fn_get_cmmn_code_nm('PROCSECD', t1.prcs_se_cd) as prcs_se_cd_nm*/
				, t1.prcs_se_cd
				, t3.std_set_nm
			FROM META_WRD t1 
			join (
				<include refid="my_std_set_nm"/>
			) t3 on t1.std_set_sn = t3.std_set_sn
		) g
		where 1 = 1
		and g.use_yn ='Y'
		<include refid="where_selectStdDicaryWrdList"/>
	</select>

	<!-- 승인코드별 표준사전 단어 카운트 -->
	<select id="selectWrdCntListBySttusCd" resultType="sangsMap" parameterType="map">
		select
			t1.aprv_sttus_cd
			, count(*) as cnt
		from META_WRD t1
		join (
			<include refid="my_std_set_nm"/>
		) t5 on t1.std_set_sn = t5.std_set_sn
		where t1.use_yn = 'Y'
		group by t1.aprv_sttus_cd 
	</select>

	<!-- 표준사전 단어 정보 조회 -->
	<select id="selectStdDicaryWrdInfo" resultType="sangsMap" parameterType="map">
		select 
			std_set_sn
			, wrd_sn
			, wrd_nm
			, wrd_eng_nm
			, wrd_eng_abrv_nm
			, prhibt_yn
			, std_wrd_nm
			, rel_wrd_nm
			, wrd_cn
			, wrd_ty_cd
			, fn_get_cmmn_code_nm('WRDCDTY', t1.wrd_ty_cd) as wrd_ty_cd_nm
			, REG_USER_ID
			, DATE_FORMAT(reg_dt, '%Y-%m-%d %H:%i:%s') as reg_dt
			, CHG_USER_ID
			, DATE_FORMAT(chg_dt, '%Y-%m-%d %H:%i:%s') as chg_dt
			, use_yn
			, del_yn
			, aprv_sttus_cd
			, prcs_se_cd
			, fn_get_cmmn_code_nm('CONFMCDTY', t1.aprv_sttus_cd) as aprv_sttus_cd_nm
			, (select std_set_ty_cd from META_STD_SET t0 where t0.std_set_sn = t1.std_set_sn) as std_set_ty_cd
		from META_WRD t1
		where t1.std_set_sn = #{stdSetSn}
			and t1.wrd_sn =#{wrdSn}
	</select>
	
	<!-- 표준사전 단어 표준어 목록 조회 -->
	<select id="selectStdWrdNmList" resultType="sangsMap" parameterType="map">
		select t1.wrd_nm
			, t1.wrd_eng_nm
			, t1.wrd_eng_abrv_nm
			, t1.prhibt_yn
			, t1.std_set_sn
			, (select t01.std_set_nm from META_STD_SET t01 where t1.std_set_sn = t01.std_set_sn) std_set_nm 
		from META_WRD t1
		where
			t1.wrd_ty_cd = 'TYPE01'
			and t1.prhibt_yn = 'N'
			and t1.use_yn ='Y'
			and t1.aprv_sttus_cd not in('REQUEST')
			and t1.std_set_sn in((select std_set_sn from META_STD_SET where	std_set_ty_cd = 'COMMON'), #{stdSetSn})
			and wrd_nm = #{stdWrdNm}
	</select>
	
	<!-- 표준사전 단어검사 목록 -->
	<select id="selectStdDicaryWrdCheckList" resultType="sangsMap" parameterType="map">
		select
			t1.std_set_sn 
			, t1.wrd_sn
			, t1.wrd_nm
			, t1.wrd_eng_nm
			, t1.wrd_eng_abrv_nm
			<if test="chkType == 'wrdNm'">
			, CHAR_LENGTH(t1.wrd_nm) chr_lng 
			</if>
			<if test="chkType == 'wrdEngNm'">
			, CHAR_LENGTH(t1.wrd_eng_nm) chr_lng 
			</if>
			<if test="chkType == 'wrdEngAbrvNm'">
			, CHAR_LENGTH(t1.wrd_eng_abrv_nm) chr_lng 
			</if>
			, fn_get_cmmn_code_nm('WRDCDTY', t1.wrd_ty_cd) as wrd_ty_cd_nm
			, t1.aprv_sttus_cd
			, fn_get_cmmn_code_nm('CONFMCDTY', t1.aprv_sttus_cd) as aprv_sttus_cd_nm
			, t2.std_set_nm
			, t2.std_set_ty_cd 
			, case
				when t1.std_set_sn = #{stdSetSn} then 1 -- 나 자신의 표준세트
				when t2.std_set_ty_cd = 'COMMON' then 2 -- 공통표준세트
				when t1.std_set_sn != #{stdSetSn} then 3 -- 나 이외에 표준세트
				else 1 -- 그외 (데이터가 존재 하지 않은 경우)
			end sort_no
		from
			META_WRD t1
			, (
				select
					std_set_sn,
					std_set_nm,
					std_set_ty_cd
				from META_STD_SET 
			) t2
		where 1 = 1
			and t1.std_set_sn = t2.std_set_sn
			and t1.use_yn = 'Y'
			and t1.del_yn = 'N'
		<if test="chkType == 'wrdNm'">
			and t1.wrd_nm like CONCAT('%',#{searchWrd},'%')
		</if>
		<if test="chkType == 'wrdEngNm'">
			and t1.wrd_eng_nm like CONCAT('%',#{searchWrd},'%')
		</if>
		<if test="chkType == 'wrdEngAbrvNm'">
			and t1.wrd_eng_abrv_nm like CONCAT('%',#{searchWrd},'%')
		</if>
			order by chr_lng, std_set_sn, sort_no
	</select>
	
	<!-- 표준사전 단어 채번 -->
	<select id="selectNextStdDicaryWrdSn" resultType="Integer" parameterType="map">
		select 
			ifnull(max(wrd_sn), 0) + 1
		from META_WRD
		where std_set_sn = #{stdSetSn}
	</select>
	<!-- 표준사전 단어 등록 -->
	<insert id="insertStdDicaryWrdInfo" parameterType="map">
		insert into META_WRD (
			std_set_sn
			, wrd_sn
			, wrd_nm
			, wrd_eng_nm
			, wrd_eng_abrv_nm
			, prhibt_yn
			, std_wrd_nm
			, rel_wrd_nm
			, wrd_cn
			, wrd_ty_cd
			, reg_user_id
			, reg_dt
			, use_yn
			, del_yn
		) values (
			#{stdSetSn}
			, #{wrdSn}
			, #{wrdNm}
			, #{wrdEngNm}
			, #{wrdEngAbrvNm}
			, #{prhibtYn}
			, #{stdWrdNm}
			, #{relWrdNm}
			, #{wrdCn}
			, #{wrdTyCd}
			, #{regUserId}
			, now()
			, #{useYn}
			, #{delYn}
		)
	</insert>
	
	<!-- 표준사전 단어 이력 채번 -->
	<select id="selectNextStdDicaryWrdHistSn" resultType="Integer" parameterType="map">
		select 
			ifnull(max(wrd_hist_sn), 0) + 1
		from META_WRD_HIST
		where std_set_sn = #{stdSetSn}
			and wrd_sn = #{wrdSn}
	</select>
	<!-- 표준사전 단어 이력 등록 -->
	<insert id="insertStdDicaryWrdHistInfo" parameterType="map">
		insert into META_WRD_HIST (
			std_set_sn
			, wrd_sn
			, wrd_hist_sn
			, rqst_dt
		<if test='"Y".equals(isApprover) and "A".equals(pmode)'>
			, prcs_dt
		</if>
			, aprv_sttus_cd
			, chg_iem_nm
			, prcs_se_cd
			, bfchg_cn
			, aftch_cn
			, reg_user_id
			, reg_dt
		<if test='"Y".equals(isApprover) and ("A".equals(pmode) or "RT".equals(pmode))'>
			, chg_user_id
			, chg_dt
		</if>
			, wrd_copy_sn
		) values(
			#{stdSetSn}
			, #{wrdSn}
			, #{wrdHistSn} 
			, now()
		<if test='"Y".equals(isApprover) and "A".equals(pmode)'>
			, now()
		</if>
			, #{aprvSttusCd} 
			, #{chgIemNm} 
			, #{prcsSeCd} 
			, #{bfchgCn} 
			, #{aftchCn} 
			, #{regUserId} 
			, now()
		<if test='"Y".equals(isApprover) and ("A".equals(pmode) or "RT".equals(pmode))'>
			, #{chgUserId} 
			, now()
		</if>
			, #{wrdCopySn}
		)
	</insert>
	
	<!-- 표준사전 단어 수정 -->
	<update id="updateStdDicaryWrdInfo" parameterType="map">
		update META_WRD
		set chg_dt = now()
			, wrd_ty_cd = #{wrdTyCd}
			, wrd_nm = #{wrdNm}
			, wrd_eng_nm = #{wrdEngNm}
			, wrd_eng_abrv_nm = #{wrdEngAbrvNm}
			, prhibt_yn = #{prhibtYn}
			, aprv_sttus_cd = #{aprvSttusCd}
			, prcs_se_cd = #{prcsSeCd}
			, chg_user_id = #{chgUserId}
			, chg_user_id = #{regUserId}
			, wrd_cn = #{wrdCn}
			, std_wrd_nm = #{stdWrdNm}
			, rel_wrd_nm = #{relWrdNm}
			<if test="useYn != '' and useYn != null ">
				, use_Yn = #{useYn}
			</if>
			<if test="delYn != '' and delYn != null ">
				, del_yn = #{delYn}
			</if>
		where std_set_sn = #{stdSetSn}
		and wrd_sn = #{wrdSn}
	</update>
	
	<!-- 표준사전 단어 승인 수정 -->
	<update id="updateStdDicaryWrdConfmInfo" parameterType="map">
		update META_WRD
		set chg_dt = now()
			, aprv_sttus_cd = #{aprvSttusCd}
			, prcs_se_cd = #{prcsSeCd}
		<if test="useYn != '' and useYn != null ">
			, use_Yn = #{useYn}
		</if>
		<if test="delYn != '' and delYn != null ">
			, del_yn = #{delYn}
		</if>
		<if test='"Y".equals(isApprover)'>
			, chg_user_id = #{chgUserId}
		</if>
		<if test='"N".equals(isApprover)'>
			, chg_user_id = #{regUserId}
		</if>
		where std_set_sn = #{stdSetSn}
		and wrd_sn = #{wrdSn}
	</update>
	
	<!-- 표준사전 변경이력 검색 조건 목록 -->
 	<sql id="where_selectStdDicaryStdChangeHistList">
		<if test="sltDt == 'prcsDt'">
			and g.prcs_dt between TIMESTAMP(concat(#{beginDtFrom}, '000000')) and TIMESTAMP(concat(#{beginDtTo}, '235959'))
		</if>
		<if test="sltDt =='rqstDt'">
			and g.rqst_dt between TIMESTAMP(concat(#{beginDtFrom}, '000000')) and TIMESTAMP(concat(#{beginDtTo}, '235959'))
		</if>
		<if test="sltText =='aprvSttusCdNm'">
			and g.aprv_sttus_cd_nm like CONCAT('%',#{searchText},'%')
		</if>
	 	<if test="sltText =='chgIemNm'">
			and g.chg_iem_nm like CONCAT('%',#{searchText},'%')
		</if>
		<if test="sltText =='aftchCn'">
			and g.aftch_cn like CONCAT('%',#{searchText},'%')
		</if>
		<if test="sltText =='bfchgCn'">
			and g.bfchg_cn like CONCAT('%',#{searchText},'%')
		</if>
		<if test="sltText =='regUserId'">
			and g.reg_user_id like CONCAT('%',#{searchText},'%')
		</if>
		<if test="sltText =='chgUserId'">
			and g.chg_user_id like CONCAT('%',#{searchText},'%')
		</if> 				
	</sql>
	<!-- 표준사전 단어 변경이력 목록 -->	
	<select id="selectStdDicaryStdChangeWrdHistList" resultType="sangsMap" parameterType="map">
		select * from 
			(
			select t1.wrd_sn
				, t1.wrd_hist_sn
				, t1.std_set_sn
				, case when t1.aprv_sttus_cd = 'APPROVAL' then DATE_FORMAT(t1.prcs_dt, '%Y-%m-%d %H:%i:%s') else DATE_FORMAT(t1.rqst_dt, '%Y-%m-%d %H:%i:%s')  end as chg_dt
				, case when t1.aprv_sttus_cd = 'APPROVAL' then DATE_FORMAT(t1.prcs_dt, '%Y-%m-%d') else DATE_FORMAT(t1.rqst_dt, '%Y-%m-%d')  end as chg_dt2
				, case when t1.prcs_dt is null or t1.prcs_dt = '' then '' else DATE_FORMAT(t1.prcs_dt, '%Y-%m-%d %H:%i:%s') end as prcs_dt
				, DATE_FORMAT(t1.rqst_dt, '%Y-%m-%d %H:%i:%s') as rqst_dt
				, fn_get_cmmn_code_nm('CONFMCDTY', t1.aprv_sttus_cd) as aprv_sttus_cd_nm
				, t1.aftch_cn
				, t1.bfchg_cn
				, fn_get_cmmn_code_nm('PROCSECD', t1.prcs_se_cd) as prcs_se_cd_nm
				, t1.prcs_se_cd
				, t1.chg_iem_nm
				, t1.reg_user_id
				, t1.chg_user_id
			from META_WRD_HIST t1
			where t1.std_set_sn = #{stdSetSn}
			and t1.wrd_sn =#{wrdSn}
			) g
		where 1 = 1
		<include refid="where_selectStdDicaryStdChangeHistList"/>
		order by g.wrd_hist_sn desc
		<if test='detailPageYn !="Y"'>
		limit #{cnt}
 		</if>
	</select>
 
	
	<!-- 표준사전 도메인 변경이력 목록 -->
	<select id="selectStdDicaryStdChangeDomnHistList" resultType="sangsMap" parameterType="map">
		select * from 
			(
			select t1.domn_sn
				, t1.domn_hist_sn
				, t1.std_set_sn
				, case when t1.aprv_sttus_cd = 'APPROVAL' then DATE_FORMAT(t1.prcs_dt, '%Y-%m-%d %H:%i:%s') else DATE_FORMAT(t1.rqst_dt, '%Y-%m-%d %H:%i:%s')  end as chg_dt
				, case when t1.aprv_sttus_cd = 'APPROVAL' then DATE_FORMAT(t1.prcs_dt, '%Y-%m-%d') else DATE_FORMAT(t1.rqst_dt, '%Y-%m-%d')  end as chg_dt2
				, case when t1.prcs_dt is null or t1.prcs_dt = '' then '' else DATE_FORMAT(t1.prcs_dt, '%Y-%m-%d %H:%i:%s') end as prcs_dt
				, DATE_FORMAT(t1.rqst_dt, '%Y-%m-%d %H:%i:%s') as rqst_dt
				, fn_get_cmmn_code_nm('CONFMCDTY', t1.aprv_sttus_cd) as aprv_sttus_cd_nm
				, t1.aftch_cn
				, t1.bfchg_cn
				, fn_get_cmmn_code_nm('PROCSECD', t1.prcs_se_cd) as prcs_se_cd_nm
				, t1.prcs_se_cd
				, t1.chg_iem_nm
				, t1.reg_user_id
				, t1.chg_user_id
			from META_DOMN_HIST t1
			where t1.std_set_sn = #{stdSetSn}
			and t1.domn_sn =#{domnSn}
			) g
		where 1 = 1
		<include refid="where_selectStdDicaryStdChangeHistList"/>
		order by g.domn_hist_sn desc
		<if test='detailPageYn !="Y"'>
		limit #{cnt}
 		</if>
	</select>
	
	<!-- 표준사전 용어 변경이력 목록 -->	
	<select id="selectStdDicaryStdChangeWordHistList" resultType="sangsMap" parameterType="map">
		select * from 
			(
			select t1.word_sn
				, t1.word_hist_sn
				, t1.std_set_sn
				, case when t1.aprv_sttus_cd = 'APPROVAL' then DATE_FORMAT(t1.prcs_dt, '%Y-%m-%d %H:%i:%s') else DATE_FORMAT(t1.rqst_dt, '%Y-%m-%d %H:%i:%s')  end as chg_dt
				, case when t1.aprv_sttus_cd = 'APPROVAL' then DATE_FORMAT(t1.prcs_dt, '%Y-%m-%d') else DATE_FORMAT(t1.rqst_dt, '%Y-%m-%d')  end as chg_dt2
				, case when t1.prcs_dt is null or t1.prcs_dt = '' then '' else DATE_FORMAT(t1.prcs_dt, '%Y-%m-%d %H:%i:%s') end as prcs_dt
				, DATE_FORMAT(t1.rqst_dt, '%Y-%m-%d %H:%i:%s') as rqst_dt
				, fn_get_cmmn_code_nm('CONFMCDTY', t1.aprv_sttus_cd) as aprv_sttus_cd_nm
				, t1.aftch_cn
				, t1.bfchg_cn
				, fn_get_cmmn_code_nm('PROCSECD', t1.prcs_se_cd) as prcs_se_cd_nm
				, t1.prcs_se_cd
				, t1.chg_iem_nm
				, t1.reg_user_id
				, t1.chg_user_id
			from META_WORD_HIST t1
			where t1.std_set_sn = #{stdSetSn}
			and t1.word_sn =#{wordSn}
			) g
		where 1 = 1
		<include refid="where_selectStdDicaryStdChangeHistList"/>
		order by g.word_hist_sn desc
		<if test='detailPageYn !="Y"'>
		limit #{cnt}
 		</if>
	</select>
	 
	<!-- 표준사전 도메인 목록 조회 -->
	<sql id="where_selectStdDicaryDomnList">
		and g.use_yn = 'Y'
		and g.del_yn = 'N'
		<if test="aprvSttusCdArrList != '' and aprvSttusCdArrList != null ">
			<if test="!aprvSttusCdArrList.isEmpty()">
			and g.aprv_sttus_cd in 
				<foreach collection="aprvSttusCdArrList" item="item" open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
		</if>
		<if test="stdSetNmArrList != '' and stdSetNmArrList != null ">
			<if test="!stdSetNmArrList.isEmpty()">
			and g.std_set_sn in 
				<foreach collection="stdSetNmArrList" item="item" open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
		</if>
		<if test="domnGroupSn != '' and domnGroupSn != null ">
			and g.domn_group_sn = #{domnGroupSn}
		</if>
		<if test="domnNm != '' and domnNm != null ">
		 	and g.domn_nm like CONCAT('%',#{domnNm},'%')
		</if>
		<if test="domnClNm != '' and domnClNm != null ">
		 	and g.domn_cl_nm like CONCAT('%',#{domnClNm},'%')
		</if>
		<if test="domnCn != '' and domnCn != null ">
			and g.domn_cn like CONCAT('%',#{domnCn},'%')
		</if>
		<if test="dataTyCd != '' and dataTyCd != null ">
			and g.data_ty_cd = #{dataTyCd}
		</if>
	</sql>
	<select id="selectStdDicaryDomnList" resultType="sangsMap" parameterType="map">
		select * from 
			(
			select 
				t1.std_set_sn
				, t1.domn_group_sn
				, t4.std_set_nm
				, t2.domn_group_nm
				, t1.domn_cl_nm 
				, t1.domn_sn
				, t1.data_ty_cd
				, t1.data_lt_value
				, t1.domn_nm
				, t1.domn_cn
				, t1.use_yn
				, t1.del_yn
				, t1.aprv_sttus_cd
				, fn_get_cmmn_code_nm('CONFMCDTY', t1.aprv_sttus_cd) as aprv_sttus_cd_nm
			from META_DOMN t1
				join META_DOMN_GROUP t2 on t1.domn_group_sn = t2.domn_group_sn
				join (
					<include refid="my_std_set_nm"/>
				) t4 on t1.std_set_sn = t4.std_set_sn
			) g
		where 1 = 1
		<include refid="where_selectStdDicaryDomnList"/>
		<if test='excelYn !="Y"'>
		limit #{pageSize} offset #{offset}
		</if>
	</select>
	
	<!-- 표준사전 도메인 목록 count 조회 -->
	<select id="selectStdDicaryDomnListCnt" resultType="Integer" parameterType="map">
		select count(*) as cnt from 
			(
			select 
				t1.std_set_sn
				, t1.domn_group_sn
				, t2.domn_group_nm
				, t1.domn_cl_nm
				, t1.domn_sn
				, t1.data_ty_cd
				, t1.data_lt_value
				, t1.domn_nm
				, t1.domn_cn
				, t1.use_yn
				, t1.del_yn
				, t1.aprv_sttus_cd
			from META_DOMN t1
				join META_DOMN_GROUP t2 on t1.domn_group_sn = t2.domn_group_sn
				join (
					<include refid="my_std_set_nm"/>
				) t4 on t1.std_set_sn = t4.std_set_sn
			) g
		where 1 = 1
		<include refid="where_selectStdDicaryDomnList"/>
	</select>
	
	
	<!-- 표준사전 도메인 목록 조회(공통셋과 자신의 셋 merge 된 목록) -->
	<sql id="where_selectStdDicaryMergedDomnList">
		and g.use_yn = 'Y'
		and g.del_yn = 'N'
		
		<if test="availUseYn != '' and availUseYn != null ">
			and avail_use_yn = #{availUseYn}
		</if>
		<if test="aprvSttusCdArrList != '' and aprvSttusCdArrList != null ">
			<if test="!aprvSttusCdArrList.isEmpty()">
			and g.aprv_sttus_cd in 
				<foreach collection="aprvSttusCdArrList" item="item" open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
		</if>
		<if test="stdSetNmArrList != '' and stdSetNmArrList != null ">
			<if test="!stdSetNmArrList.isEmpty()">
			and g.std_set_sn in 
				<foreach collection="stdSetNmArrList" item="item" open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
		</if>
		<if test="domnGroupSn != '' and domnGroupSn != null ">
			and g.domn_group_sn = #{domnGroupSn}
		</if>
		<if test="domnNm != '' and domnNm != null ">
		 	and g.domn_nm like CONCAT('%',#{domnNm},'%')
		</if>
		<if test="domnClNm != '' and domnClNm != null ">
		 	and g.domn_cl_nm like CONCAT('%',#{domnClNm},'%')
		</if>
		<if test="domnCn != '' and domnCn != null ">
			and g.domn_cn like CONCAT('%',#{domnCn},'%')
		</if>
		<if test="dataTyCd != '' and dataTyCd != null ">
			and g.data_ty_cd = #{dataTyCd}
		</if>
	</sql>
	<sql id="with_selectStdDicaryMergedDomnList">
		with w_my_domn as (
			select 
				'Y' as avail_use_yn
				, t0.* 
			from META_DOMN t0
			where std_set_sn = #{stdSetSn}
				and use_yn ='Y'
				and del_yn = 'N'
		)
		, w_cmmn_domn as (
			select 
				'N' as avail_use_yn
				, t0.* 
			from META_DOMN t0
			where std_set_sn in (select STD_SET_SN From META_STD_SET where STD_SET_TY_CD = 'COMMON' and USE_YN = 'Y' and DEL_YN = 'N')
				and t0.use_yn ='Y'
				and t0.del_yn = 'N'
		) , w_merged_domn as (
			select 
				t1.* 
			from w_my_domn t1
			union
			select 
				t1.* 
			from w_cmmn_domn t1 
				left outer join w_my_domn t2 on t1.domn_nm = t2.domn_nm	
			where t2.std_set_sn is null
		)
	</sql>
	<select id="selectStdDicaryMergedDomnList" resultType="sangsMap" parameterType="map">
		<include refid="with_selectStdDicaryMergedDomnList"/>
		select * from 
		(
			select 
				t01.std_set_sn as merged_std_set_sn
				, t01.avail_use_yn
				, t01.domn_group_sn
				, t02.domn_group_nm
				, t01.domn_cl_nm 
				, t01.domn_sn
				, t01.data_ty_cd
				, t01.data_lt_value
				, t01.data_dcmlpoint_lt_value
				, t01.domn_nm
				, t01.domn_cn
				, t01.use_yn
				, t01.del_yn
				, t01.aprv_sttus_cd
				, t01.reg_dt
				, t01.prcs_se_cd
			from w_merged_domn t01
				join META_DOMN_GROUP t02 on t01.domn_group_sn = t02.domn_group_sn 
		) g
		where 1 = 1
		<include refid="where_selectStdDicaryMergedDomnList"/>
		order by domn_group_nm, domn_cl_nm, length(data_lt_value) , data_lt_value
		<if test='excelYn !="Y"'>
		limit #{pageSize} offset #{offset}
		</if>
	</select>
	<!-- 표준사전 도메인 목록 count 조회(공통셋과 자신의 셋 merge 된 목록) -->
	<select id="selectStdDicaryMergedDomnListCnt" resultType="Integer" parameterType="map">
		<include refid="with_selectStdDicaryMergedDomnList"/>
		select count(*) as cnt from 
		(
			select 
				t01.std_set_sn as merged_std_set_sn
				, t01.avail_use_yn
				, t01.domn_group_sn
				, t02.domn_group_nm
				, t01.domn_cl_nm 
				, t01.domn_sn
				, t01.data_ty_cd
				, t01.data_lt_value
				, t01.data_dcmlpoint_lt_value
				, t01.domn_nm
				, t01.domn_cn
				, t01.use_yn
				, t01.del_yn
				, t01.aprv_sttus_cd
				, t01.reg_dt
			from w_merged_domn t01
				join META_DOMN_GROUP t02 on t01.domn_group_sn = t02.domn_group_sn
		) g
		where 1 = 1
		<include refid="where_selectStdDicaryMergedDomnList"/>
	</select>
	
	<!-- 승인코드별 표준사전 도메인 카운트 -->
	<select id="selectDomnCntListBySttusCd" resultType="sangsMap" parameterType="map">
		select
			t1.aprv_sttus_cd
			, count(*) as cnt
		from META_DOMN t1
		join (
			<include refid="my_std_set_nm"/>
		) t5 on t1.std_set_sn = t5.std_set_sn
		where t1.use_yn = 'Y'
		group by t1.aprv_sttus_cd 
	</select>
	
	
	<!-- 표준사전 도메인 정보 조회 -->
	<select id="selectStdDicaryDomnInfo" resultType="sangsMap" parameterType="map">
		select 
			std_set_sn
			, (select t0.std_set_ty_cd from META_STD_SET t0 where t0.std_set_sn = t1.std_set_sn) as std_set_ty_cd
			, domn_sn
			, domn_group_sn
			, (select domn_group_nm from META_DOMN_GROUP t0 where t0.domn_group_sn = t1.domn_group_sn) as domn_group_nm
			, domn_cl_nm
			, domn_nm
			, domn_cn
			, data_ty_cd
			, data_lt_value
			, data_dcmlpoint_lt_value
			, data_mumm_value
			, data_mxmm_value
			, use_yn
			, del_yn
			, reg_user_id
			, DATE_FORMAT(reg_dt, '%Y-%m-%d %H:%i:%s') as reg_dt
			, chg_user_id
			, DATE_FORMAT(chg_dt, '%Y-%m-%d %H:%i:%s') as chg_dt
			, aprv_sttus_cd
			, fn_get_cmmn_code_nm('CONFMCDTY', t1.aprv_sttus_cd) as aprv_sttus_cd_nm
			, prcs_se_cd
		from  META_DOMN t1
		where t1.std_set_sn = #{stdSetSn}
			and t1.domn_sn =#{domnSn}
	</select>
	
	<!-- 표준사전 도메인 채번 -->
	<select id="selectNextStdDicaryDomnSn" resultType="Integer" parameterType="map">
		select 
			ifnull(max(domn_sn), 0) + 1
		from META_DOMN
		where std_set_sn = #{stdSetSn}
	</select>
	<!-- 표준사전 도메인 등록 -->
	<insert id="insertStdDicaryDomnInfo" parameterType="map">
		insert into META_DOMN (
			std_set_sn
			, domn_sn
			, domn_group_sn
			, domn_cl_nm
			, domn_nm
			, domn_cn
			, data_ty_cd
			, data_lt_value
			, data_dcmlpoint_lt_value
			, data_mumm_value
			, data_mxmm_value
			, use_yn
			, del_yn
			, reg_user_id
			, reg_dt
		) values(
			#{stdSetSn}
			, #{domnSn}
			, #{domnGroupSn}
			, #{domnClNm}
			, #{domnNm}
			, #{domnCn}
			, #{dataTyCd}
			, #{dataLtValue}
			, #{dataDcmlpointLtValue}
			, #{dataMummValue}
			, #{dataMxmmValue}
			, #{useYn}
			, #{delYn}
			, #{regUserId}
			, now()
		)
	</insert>
	
		
	<!-- 표준사전 도메인 수정 -->
	<update id="updateStdDicaryDomnInfo" parameterType="map">
		update META_DOMN
		set chg_dt = now()
			, domn_group_sn = #{domnGroupSn}
			, domn_nm = #{domnNm}
			, data_ty_cd = #{dataTyCd}
			, aprv_sttus_cd = #{aprvSttusCd}
			, prcs_se_cd = #{prcsSeCd}
			, domn_cn = #{domnCn}
			, data_lt_value = #{dataLtValue}
			, data_mumm_value = #{dataMummValue}
			, data_mxmm_value = #{dataMxmmValue}
			, data_dcmlpoint_lt_value = #{dataDcmlpointLtValue}
		<if test="useYn != '' and useYn != null ">
			, use_Yn = #{useYn}
		</if>
		<if test="delYn != '' and delYn != null ">
			, del_yn = #{delYn}
		</if>
		<if test='"Y".equals(isApprover)'>
			, chg_user_id = #{chgUserId}
		</if>
		<if test='"N".equals(isApprover)'>
			, chg_user_id = #{regUserId}
		</if>
		where std_set_sn = #{stdSetSn}
		and domn_sn = #{domnSn}
	</update>
	
	
	<!-- 표준사전 도메인 승인 수정 -->
	<update id="updateStdDicaryDomnConfmInfo" parameterType="map">
		update META_DOMN
		set chg_dt = now()
			, aprv_sttus_cd = #{aprvSttusCd}
			, prcs_se_cd = #{prcsSeCd}
		<if test="useYn != '' and useYn != null ">
			, use_Yn = #{useYn}
		</if>
		<if test="delYn != '' and delYn != null ">
			, del_yn = #{delYn}
		</if>
		<if test='"Y".equals(isApprover)'>
			, chg_user_id = #{chgUserId}
		</if>
		<if test='"N".equals(isApprover)'>
			, chg_user_id = #{regUserId}
		</if>
		where std_set_sn = #{stdSetSn}
		and domn_sn = #{domnSn}
	</update>
	
	<!-- 표준사전 도메인 이력 채번 -->
	<select id="selectNextStdDicaryDomnHistSn" resultType="Integer" parameterType="map">
		select 
			ifnull(max(domn_hist_sn), 0) + 1
		from META_DOMN_HIST
		where std_set_sn = #{stdSetSn}
			and domn_sn = #{domnSn}
	</select>
	<!-- 표준사전 도메인 이력 등록 -->
	<insert id="insertStdDicaryDomnHistInfo" parameterType="map">
		insert into META_DOMN_HIST (
			std_set_sn
			, domn_sn
			, domn_hist_sn
			, rqst_dt
		<if test='"Y".equals(isApprover) and "A".equals(pmode)'>
			, prcs_dt
		</if>
			, aprv_sttus_cd
			, chg_iem_nm
			, prcs_se_cd
			, bfchg_cn
			, aftch_cn
			, reg_user_id
			, reg_dt
		<if test='"Y".equals(isApprover) and ("A".equals(pmode) or "RT".equals(pmode))'>
			, chg_user_id
			, chg_dt
		</if>
			, domn_copy_sn
		) values(
			#{stdSetSn}
			, #{domnSn}
			, #{domnHistSn}
			, now()
		<if test='"Y".equals(isApprover) and "A".equals(pmode)'>
			, case when #{rqstDt} = '' or #{rqstDt} is null then now() else #{rqstDt} end
		</if>
			, #{aprvSttusCd} 
			, #{chgIemNm} 
			, #{prcsSeCd} 
			, #{bfchgCn} 
			, #{aftchCn} 
			, #{regUserId} 
			, now()
		<if test='"Y".equals(isApprover) and ("A".equals(pmode) or "RT".equals(pmode))'>
			, #{chgUserId} 
			, now()
		</if>
			, #{domnCopySn}
		)
	</insert>
	 
	
	<!-- 표준사전 도메인검사 목록 -->
	<!-- 
	<select id="selectStdDicaryDomnCheckList" resultType="sangsMap" parameterType="map">
		with TEMP as (
			select
				t1.std_set_sn 
				, t1.domn_sn
				, t1.domn_sn as ty_nm
				, t1.domn_nm
				, t2.std_set_nm
				, t2.std_set_ty_cd 
				, case
					when t1.std_set_sn = #{stdSetSn} then 1 
					when t2.std_set_ty_cd = 'COMMON' then 2 
					when t1.std_set_sn != #{stdSetSn} then 3
					else 1 
				end sort_no
			from
				META_DOMN t1
				, (
					select
						std_set_sn,
						std_set_nm,
						std_set_ty_cd
					from META_STD_SET 
				) t2
			where 1 = 1
				and t1.std_set_sn = t2.std_set_sn
				and t1.domn_nm like CONCAT('%',#{domnNm},'%') 
		)
		select
			case when std_set_sn is null then #{stdSetSn} else std_set_sn end std_set_sn
			, case when domn_sn is null then '검색어' else '등록 도메인' end ty_nm
			, case when domn_nm is null then '(NULL)' else domn_nm end domn_nm
			, case when std_set_nm is not null then '현재 표준세트' else std_set_nm	end std_set_nm
			, case when std_set_ty_cd is null then 'NONE' else std_set_ty_cd end std_set_ty_cd
			, sort_no
			, domn_sn
			, nvl(max(std_set_sn), 'TEMP' ) as temp_col
		from TEMP
		where 1 = 1
			and std_set_sn = #{stdSetSn}
		union all
		select *
			, null as temp_col
		from TEMP
		where 1 = 1 
		and std_set_sn != #{stdSetSn}
		order by sort_no
	</select>
	 -->
	 <select id="selectStdDicaryDomnCheckList" resultType="sangsMap" parameterType="map">
		select
			t1.std_set_sn 
			, t3.domn_group_nm 
			, t1.domn_sn
			, t1.domn_nm
			, t2.std_set_nm
			, t2.std_set_ty_cd
			, t1.aprv_sttus_cd
			, fn_get_cmmn_code_nm('CONFMCDTY', t1.aprv_sttus_cd) as aprv_sttus_cd_nm
			, case
				when t1.std_set_sn = #{stdSetSn} then 1 -- 나 자신의 표준세트
				when t2.std_set_ty_cd = 'COMMON' then 2 -- 공통표준세트
				when t1.std_set_sn != #{stdSetSn} then 3 -- 나 이외에 표준세트
				else 1 -- 그외 (데이터가 존재 하지 않은 경우)
			end sort_no
		from
			META_DOMN t1
			, (
				select
					std_set_sn,
					std_set_nm,
					std_set_ty_cd
				from META_STD_SET 
			) t2
			, META_DOMN_GROUP t3
		where 1 = 1
			and t1.std_set_sn = t2.std_set_sn
			and t1.domn_group_sn = t3.domn_group_sn
			and t1.use_yn = 'Y'
			and t1.del_yn = 'N'
			and t1.domn_nm like CONCAT('%',#{domnNm},'%') 
		order by sort_no
	</select>
	
	<!-- 도메인그룹관리 목록 조회 -->
	<select id="selectStdDicaryDomnGroupList" resultType="sangsMap" parameterType="map">
		select domn_group_sn
			, domn_group_nm
			, sort_sn
		from META_DOMN_GROUP
		where del_yn = 'N'
		order by sort_sn
	</select>

	<!-- 표준사전 도메인그룹 채번 -->
	<select id="selectNextStdDicaryDomnGroupSortSn" resultType="Integer" parameterType="map">
		select 
			ifnull(max(sort_sn), 0) + 1
		from META_DOMN_GROUP
	</select>
	
	<!-- 표준사전 도메인그룹 등록 -->
	<insert id="insertStdDicaryDomnGroupInfo" parameterType="map">
		insert into META_DOMN_GROUP (
			domn_group_sn
			, domn_group_nm
			, sort_sn
			, del_yn
			, reg_user_id
			, reg_dt
			, chg_user_id
			, chg_dt
		) values (
			#{domnGroupSn}
			, #{domnGroupNm} 
			, #{sortSn}
			, #{delYn}
			, #{regUserId} 
			, now()
			, #{regUserId} 
			, now()
		)
	</insert>
	
	<!-- 표준사전 도메인그룹 수정 -->
	<update id="updateStdDicaryDomnGroupInfo" parameterType="map">
		update META_DOMN_GROUP
		set chg_dt = now()
		<if test="domnGroupNm != '' and domnGroupNm != null ">
			, domn_group_nm = #{domnGroupNm}
		</if>
		<if test="delYn != '' and delYn != null ">
			, del_yn = #{delYn}
		</if>
			, chg_user_id = #{regUserId}
		where domn_group_sn = #{domnGroupSn}
	</update>
	
	<!-- 표준사전 용어 목록 조회 -->
	<sql id="where_selectStdDicaryWordList">
		<if test="stdSetSn != '' and stdSetSn != null ">
			and g.std_set_sn = #{stdSetSn} 
		</if>
		<if test="aprvSttusCdArrList != '' and aprvSttusCdArrList != null ">
			<if test="!aprvSttusCdArrList.isEmpty()">
			and g.aprv_sttus_cd in 
				<foreach collection="aprvSttusCdArrList" item="item" open="(" close=")" separator=",">
					#{item}
				</foreach>
			</if>
		</if>
		<if test="prhibtYn != '' and prhibtYn != null ">
		 	and g.prhibt_yn = #{prhibtYn}
		</if>
		<if test="wordNm != '' and wordNm != null ">
		 	and g.word_nm like #{wordNm}
		</if>		
		<if test="wordEngNm != '' and wordEngNm != null ">
			and g.word_eng_nm like CONCAT('%',#{wordEngNm},'%')
		</if>
		<if test="wordEngAbrvNm != '' and wordEngAbrvNm != null ">
		 	and g.word_eng_abrv_nm like #{wordEngAbrvNm}
		</if>
		<if test="wordTyCd != '' and wordTyCd != null ">
		 	and g.word_ty_cd = #{wordTyCd}
		</if>
		<if test="domnGroupCode != '' and domnGroupCode != null ">
		 	and g.domn_group_sn = #{domnGroupCode}
		</if>
		<if test="relWordNm != '' and relWordNm != null ">
		 	and g.rel_word_nm like CONCAT('%',#{relWordNm},'%')
		</if>
		<if test="wordCn != '' and wordCn != null ">
		 	and g.word_cn like CONCAT('%',#{wordCn},'%')
		</if>
	</sql>
	<select id="selectStdDicaryWordList" resultType="sangsMap" parameterType="map">
		select * from 
			(
			select
				t1.std_set_sn 
				, t1.word_sn
				, t1.word_nm
				, t1.word_eng_nm
				, t1.word_eng_abrv_nm
				, t1.prhibt_yn
				, t1.word_ty_cd
				, t1.use_yn
				, t1.rel_word_nm
				, t1.word_cn
				, t1.aprv_sttus_cd
				, t1.prcs_se_cd
				, t4.domn_sn 
				, t4.domn_nm
				, t4.domn_group_nm
				, t4.domn_group_sn
				, t4.data_ty_cd
				, t4.data_lt_value
				, t4.data_dcmlpoint_lt_value
				, t5.std_set_nm
			from META_WORD t1
			left join META_STD_SET t3 on t1.std_set_sn = t3.std_set_sn
			left join (
				select t1.std_set_sn
					, t1.domn_sn 
					, t1.domn_nm 
					, t1.data_ty_cd
					, t1.data_lt_value
					, t1.data_dcmlpoint_lt_value
					, t1.domn_group_sn
					, t2.domn_group_nm
				from META_DOMN t1
					, META_DOMN_GROUP t2
				where t1.domn_group_sn = t2.domn_group_sn
			) t4 on t1.domn_sn = t4.domn_sn and t1.domn_refrn_std_set_sn = t4.std_set_sn
			join (
				<include refid="my_std_set_nm"/>
			) t5 on t1.std_set_sn = t5.std_set_sn
		) g
		where 1 = 1
		and g.use_yn ='Y'
		<include refid="where_selectStdDicaryWordList"/>
		order by word_sn
		<if test='excelYn !="Y"'>
		limit #{pageSize} offset #{offset}
		</if>
	</select>
	
	<!-- 표준사전 용어 목록 count 조회 -->
	<select id="selectStdDicaryWordListCnt" resultType="Integer" parameterType="map">
		select count(*) as cnt from 
			(
			select
				t1.std_set_sn 
				, t1.word_sn
				, t1.word_nm
				, t1.word_eng_nm
				, t1.word_eng_abrv_nm
				, t1.prhibt_yn
				, t1.word_ty_cd
				, t1.use_yn
				, t1.rel_word_nm
				, t1.word_cn
				, t1.aprv_sttus_cd
				, t4.domn_sn 
				, t4.domn_nm
				, t4.domn_group_nm
				, t4.domn_group_sn
				, t4.data_ty_cd
				, t4.data_lt_value
				, t4.data_dcmlpoint_lt_value
				, t5.std_set_nm
			from META_WORD t1
			left join META_STD_SET t3 on t1.std_set_sn = t3.std_set_sn
			left join (
				select t1.std_set_sn
					, t1.domn_sn 
					, t1.domn_nm 
					, t1.data_ty_cd
					, t1.data_lt_value
					, t1.data_dcmlpoint_lt_value
					, t1.domn_group_sn
					, t2.domn_group_nm
				from META_DOMN t1
					, META_DOMN_GROUP t2
				where t1.domn_group_sn = t2.domn_group_sn
			) t4 on t1.domn_sn = t4.domn_sn and t1.domn_refrn_std_set_sn = t4.std_set_sn
			join (
				<include refid="my_std_set_nm"/>
			) t5 on t1.std_set_sn = t5.std_set_sn
		) g
		where 1 = 1
		and g.use_yn ='Y'
		<include refid="where_selectStdDicaryWordList"/>
	</select>	
	
	<!-- 승인코드별 표준사전 용어 카운트 -->
	<select id="selectWordCntListBySttusCd" resultType="sangsMap" parameterType="map">
		select
			t1.aprv_sttus_cd
			, count(*) as cnt
		from META_WORD t1
		join (
			<include refid="my_std_set_nm"/>
		) t5 on t1.std_set_sn = t5.std_set_sn
		where t1.use_yn = 'Y'
		group by t1.aprv_sttus_cd 
	</select>
	
	<!-- 표준사전 용어 정보 조회 -->
	<select id="selectStdDicaryWordInfo" resultType="sangsMap" parameterType="map">
		select
			t1.std_set_sn 
			, t1.word_sn
			, t1.domn_refrn_std_set_sn
			, t1.word_nm
			, t1.word_eng_nm
			, t1.word_eng_abrv_nm
			, t1.prhibt_yn
			, t1.word_cn
			, t1.aprv_sttus_cd
			, t1.prcs_se_cd
			, t4.domn_sn 
			, t4.domn_nm
			, t4.domn_group_nm
			, t4.domn_group_sn
			, fn_get_cmmn_code_nm('CONFMCDTY', t1.aprv_sttus_cd) as aprv_sttus_cd_nm
			, fn_get_cmmn_code_nm('WRDCDTY', t1.word_ty_cd) as word_ty_cd_nm
			, t1.word_ty_cd
			, t1.rel_word_nm
			, t1.use_yn
			, t1.del_yn
			, t3.std_set_ty_cd
			, t1.REG_USER_ID
			, DATE_FORMAT(t1.REG_DT, '%Y-%m-%d %H:%i:%s') as REG_DT
			, t1.CHG_USER_ID
			, DATE_FORMAT(t1.CHG_DT, '%Y-%m-%d %H:%i:%s') as CHG_DT
		from META_WORD t1
		left join META_STD_SET t3 on t1.std_set_sn = t3.std_set_sn
		left join (
			select t1.std_set_sn
				, t1.domn_sn 
				, t1.domn_nm 
				, t1.domn_group_sn
				, t2.domn_group_nm
			from META_DOMN t1
				,META_DOMN_GROUP t2
			where t1.domn_group_sn = t2.domn_group_sn
		) t4 on t1.domn_sn = t4.domn_sn and t1.domn_refrn_std_set_sn = t4.std_set_sn
		where 1 = 1
		and t1.word_sn = #{wordSn}
		and t1.std_set_sn = #{stdSetSn}
	</select>
	
	<!-- 표준사전 용어 상세 목록 -->
	<select id="selectStdDicarySearchWordNmWrdList" resultType="sangsMap" parameterType="map">
		with WRDLIST as (
			select
				t1.std_set_sn
				, t1.wrd_sn
				, t1.wrd_nm
				, t1.rel_wrd_nm
				, t1.wrd_eng_nm
				, t1.wrd_eng_abrv_nm 
				, t1.prhibt_yn
				, t1.use_yn
				, t1.wrd_ty_cd
				, t1.std_wrd_nm
				, t1.aprv_sttus_cd
				, t2.std_set_nm
				, t2.std_set_ty_cd
				, "" as no_regist
				, case 
					when ifnull(wrd_nm, #{wordNm}) != '' and instr(#{wordNm}, wrd_nm) > 0 then instr(#{wordNm}, wrd_nm)
					when ifnull(rel_wrd_nm, #{wordNm}) != '' and instr(#{wordNm}, rel_wrd_nm) > 0 then instr(#{wordNm}, rel_wrd_nm)
					when ifnull(wrd_eng_abrv_nm, #{wordNm}) != '' and instr(#{wordNm}, wrd_eng_abrv_nm) > 0 then instr(#{wordNm}, wrd_eng_abrv_nm)
				end row_sort
				, case 
					when ifnull(wrd_nm, #{wordNm}) != '' and instr(#{wordNm}, wrd_nm) > 0 and wrd_ty_cd = 'TYPE01' then 1
					when ifnull(rel_wrd_nm, #{wordNm}) != '' and instr(#{wordNm}, rel_wrd_nm) > 0 then 2
					when ifnull(wrd_eng_abrv_nm, #{wordNm}) != '' and instr(#{wordNm}, wrd_eng_abrv_nm) > 0 then 3
				end group_sort
				, case 
					when wrd_sn is not null then 'Y'
				end regist_yn
				, case
					when t1.std_set_sn = #{stdSetSn} then 1
					when t2.std_set_ty_cd = 'COMMON' then 2
					else 3
				end std_set_sort
				, (select COUNT(*) from META_WORD_WRD t0 where t0.std_set_sn = #{stdSetSn} and t0.wrd_sn = t1.wrd_sn) as wrd_use_cnt
			from META_WRD t1
				, META_STD_SET t2 
			where t1.std_set_sn = t2.std_set_sn
				and t1.use_yn = 'Y'
				and t1.del_yn = 'N'
				and t2.use_yn = 'Y'
				and t2.del_yn ='N'
				and ( 
					instr(#{wordNm}, wrd_nm) > 0 or instr(#{wordNm}, rel_wrd_nm) > 0 or instr(#{wordNm}, wrd_eng_abrv_nm) > 0
				)
		)
		select * from WRDLIST
		where row_sort > 0
		order by (case when STD_SET_TY_CD = 'COMMON' then 0 else 1 end) desc, group_sort, row_sort, wrd_use_cnt desc
	</select>
	
	<!-- 표준사전 용어 상세 목록 -->
<!-- 	<select id="selectStdDicaryDetailWrdList" resultType="sangsMap" parameterType="map">
		with WRDLIST as (
			select
				t1.std_set_sn
				, t2.std_set_nm
				, wrd_sn
				, wrd_nm
				, rel_wrd_nm
				, wrd_eng_nm
				, wrd_eng_abrv_nm 
				, prhibt_yn
				, t1.use_yn
				, "" as no_regist
				, fn_get_cmmn_code_nm('wrdcdty', wrd_ty_cd) as wrd_ty_cd_nm
				, case 
					when ifnull(wrd_nm, #{wordNm}) != '' and instr(#{wordNm}, wrd_nm) > 0 then instr(#{wordNm}, wrd_nm)
					when ifnull(rel_wrd_nm, #{wordNm}) != '' and instr(#{wordNm}, rel_wrd_nm) > 0 then instr(#{wordNm}, rel_wrd_nm)
				end row_sort
				, case 
					when ifnull(wrd_nm, #{wordNm}) != '' and instr(#{wordNm}, wrd_nm) > 0 and wrd_ty_cd = 'TYPE01' then 1
					when ifnull(rel_wrd_nm, #{wordNm}) != '' and instr(#{wordNm}, rel_wrd_nm) > 0 then 3
				end group_sort
				, case 
					when wrd_sn is not null then 'Y'
				end regist_yn
			from META_WRD t1
				, META_STD_SET t2 
			where t1.std_set_sn = t2.std_set_sn
			 	and t2.use_yn = 'Y'
				or (instr(#{wordNm}, wrd_nm) > 0
					and instr(#{wordNm}, rel_wrd_nm) > 0
					)
		)
		select * from WRDLIST
		where row_sort > 0
		order by group_sort, row_sort
	</select> -->
	
	<!-- 표준사전 용어 채번 -->
	<select id="selectNextStdDicaryWordSn" resultType="Integer" parameterType="map">
		select 
			ifnull(max(word_sn), 0) + 1
		from META_WORD
		where std_set_sn = #{stdSetSn}
	</select>
	<!-- 표준사전 용어 등록 -->
	<insert id="insertStdDicaryWordInfo" parameterType="map">
		insert into META_WORD (
			std_set_sn
			, word_sn
			, domn_refrn_std_set_sn
			, domn_sn
			, word_nm
			, word_eng_nm
			, word_eng_abrv_nm
			, rel_word_nm
			, word_cn
			, word_ty_cd
			, prhibt_yn
			, use_yn
			, del_yn
			, reg_dt
			, reg_user_id
		) values (
			#{stdSetSn}
			, #{wordSn}
			, #{domnRefrnStdSetSn}
			, #{domnSn}
			, #{wordNm}
			, #{wordEngNm}
			, #{wordEngAbrvNm}
			, #{relWordNm}
			, #{wordCn}
			, #{wordTyCd}
			, #{prhibtYn}
			, #{useYn}
			, #{delYn}
			, now()
			, #{regUserId}
		)
	</insert>
	
	<!-- 표준사전 용어단어 맵핑테이블 등록 -->
	<insert id="insertStdDicaryWordWrdInfo" parameterType="map">
		insert into META_WORD_WRD (word_sn , std_set_sn , wrd_sn, wrd_sort_sn, wrd_refrn_std_set_sn)
		values (#{wordSn}, #{stdSetSn}, #{wrdSn}, #{wrdSortSn}, #{wrdRefrnStdSetSn})
	</insert>
	
	<!-- 표준사전 용어 수정 -->
	<update id="updateStdDicaryWordInfo" parameterType="map">
		update META_WORD
		set chg_dt = now()
			, word_ty_cd = #{wordTyCd}
			, domn_sn = #{domnSn}
			, domn_refrn_std_set_sn = #{domnRefrnStdSetSn}
			, word_nm = #{wordNm}
			, word_eng_nm = #{wordEngNm}
			, word_eng_abrv_nm = #{wordEngAbrvNm}
			, prhibt_yn = #{prhibtYn}
			, aprv_sttus_cd = #{aprvSttusCd}
			, prcs_se_cd = #{prcsSeCd}
			, rel_word_nm = #{relWordNm}
			, word_cn = #{wordCn}
		<if test="useYn != '' and useYn != null ">
			, use_Yn = #{useYn}
		</if>
		<if test="delYn != '' and delYn != null ">
			, del_yn = #{delYn}
		</if>
		<if test='"Y".equals(isApprover)'>
			, chg_user_id = #{chgUserId}
		</if>
		<if test='"N".equals(isApprover)'>
			, chg_user_id = #{regUserId}
		</if>
		where std_set_sn = #{stdSetSn}
		and word_sn = #{wordSn}
	</update>
	
	<!-- 표준사전 용어 승인 수정 -->
	<update id="updateStdDicaryWordConfmInfo" parameterType="map">
		update META_WORD
		set chg_dt = now()
			, aprv_sttus_cd = #{aprvSttusCd}
			, prcs_se_cd = #{prcsSeCd}
		<if test="useYn != '' and useYn != null ">
			, use_Yn = #{useYn}
		</if>
		<if test="delYn != '' and delYn != null ">
			, del_yn = #{delYn}
		</if>
		<if test='"Y".equals(isApprover)'>
			, chg_user_id = #{chgUserId}
		</if>
		<if test='"N".equals(isApprover)'>
			, chg_user_id = #{regUserId}
		</if>
		where std_set_sn = #{stdSetSn}
		and word_sn = #{wordSn}
	</update>
	
	
	<!-- 표준사전 용어 이력 채번 -->
	<select id="selectNextStdDicaryWordHistSn" resultType="Integer" parameterType="map">
		select 
			ifnull(max(word_hist_sn), 0) + 1
		from META_WORD_HIST
		where std_set_sn = #{stdSetSn}
			and word_sn = #{wordSn}
	</select>
	<!-- 표준사전 용어 이력 등록 -->
	<insert id="insertStdDicaryWordHistInfo" parameterType="map">
		insert into META_WORD_HIST (
			std_set_sn
			, word_sn
			, word_hist_sn
			, rqst_dt
		<if test='"Y".equals(isApprover) and "A".equals(pmode)'>
			, prcs_dt
		</if>
			, aprv_sttus_cd
			, chg_iem_nm
			, prcs_se_cd
			, bfchg_cn
			, aftch_cn
			, reg_user_id
			, reg_dt
		<if test='"Y".equals(isApprover) and ("A".equals(pmode) or "RT".equals(pmode))'>
			, chg_user_id
			, chg_dt
		</if>
			, word_copy_sn
		) values(
			#{stdSetSn}
			, #{wordSn}
			, #{wordHistSn}
			, now() 
		<if test='"Y".equals(isApprover) and "A".equals(pmode)'>
			, case when #{rqstDt} = '' or #{rqstDt} is null then now() else #{rqstDt} end
		</if>
			, #{aprvSttusCd} 
			, #{chgIemNm} 
			, #{prcsSeCd}
			, #{bfchgCn} 
			, #{aftchCn} 
			, #{regUserId} 
			, now()
		<if test='"Y".equals(isApprover) and ("A".equals(pmode) or "RT".equals(pmode))'>
			, #{chgUserId} 
			, now()
		</if>
			, #{wordCopySn}
		)
	</insert>
	
	<!-- 표준변경영향도상세 - 용어 -->
	<select id="selectStdDicaryChangeWordEffecList" resultType="sangsMap" parameterType="map">
		select
			t1.std_set_sn
			, t1.domn_refrn_std_set_sn
			, t1.word_sn
			, t1.word_nm
			, t1.word_eng_nm
			, t1.word_eng_abrv_nm
			, t1.word_ty_cd
			, t1.prhibt_yn
			, t3.word_std_set_nm
			, t4.domn_std_set_nm
			, t5.domn_group_nm
			, t5.domn_cl_nm
			, t5.domn_nm
			, t5.data_ty_cd
			, t5.data_lt_value
			, fn_get_cmmn_code_nm('CONFMCDTY', t1.aprv_sttus_cd) as aprv_sttus_cd_nm 
			, fn_get_cmmn_code_nm('WRDCDTY', t1.word_ty_cd) as word_ty_cd_nm
		from META_WORD t1
		join (
			select 
				std_set_sn
				, std_set_nm as word_std_set_nm
			from META_STD_SET 
			where del_yn ='N'
			and use_yn = 'Y'
		) t3 on t1.std_set_sn = t3.std_set_sn
		join (
			select 
				std_set_sn
				, std_set_nm as domn_std_set_nm
			from META_STD_SET 
			where del_yn ='N'
			and use_yn = 'Y'
		) t4 on t1.domn_refrn_std_set_sn = t4.std_set_sn
		join (
			select
				t1.std_set_sn
				, t1.domn_sn
				, t1.domn_nm 
				, t1.data_ty_cd 
				, t2.domn_group_nm
				, t1.domn_cl_nm
				, t1.data_lt_value
			from META_DOMN t1
				join META_DOMN_GROUP t2 on t1.domn_group_sn = t2.domn_group_sn
			where t1.use_yn ='Y'
			and t1.del_yn = 'N'
			) t5 on t1.domn_sn = t5.domn_sn and t1.domn_refrn_std_set_sn = t5.std_set_sn
		where 1 = 1
		and t1.std_set_sn = #{stdSetSn}
		<if test="effectLocation == 'wrd'">
		and t1.word_sn in (select word_sn from META_WORD_WRD where wrd_sn = #{wrdSn} and std_set_sn = #{stdSetSn})
		</if>
		<if test="effectLocation == 'domn'">
		and t1.domn_sn = #{domnSn}
		</if>
		and t1.del_yn ='N'
		and t1.use_yn = 'Y'
		<if test='detailPageYn !="Y"'>
		limit #{cnt}
 		</if>
	</select>
	
	<!-- 표준변경영향도상세 - 도메인 -->
	<select id="selectStdDicaryChangeDomnEffecList" resultType="sangsMap" parameterType="map">
		select
			distinct t1.std_set_sn
			, t1.domn_refrn_std_set_sn
			, t4.domn_std_set_nm
			, t5.domn_group_nm
			, t5.domn_cl_nm
			, t5.domn_nm
			, t5.data_ty_cd
			, t5.data_lt_value
			, fn_get_cmmn_code_nm('CONFMCDTY', t1.aprv_sttus_cd) as aprv_sttus_cd_nm 
		from META_WORD t1
		join (
			select 
				std_set_sn
				, std_set_nm as domn_std_set_nm
			from META_STD_SET 
			where del_yn ='N'
			and use_yn = 'Y'
		) t4 on t1.domn_refrn_std_set_sn = t4.std_set_sn
		join (
			select
				t1.std_set_sn
				, t1.domn_sn
				, t1.domn_nm 
				, t1.data_ty_cd 
				, t2.domn_group_nm
				, t1.domn_cl_nm
				, t1.data_lt_value
			from META_DOMN t1
				join META_DOMN_GROUP t2 on t1.domn_group_sn = t2.domn_group_sn
			) t5 on t1.domn_sn = t5.domn_sn and t1.domn_refrn_std_set_sn = t5.std_set_sn
		where 1 = 1
		and t1.std_set_sn = #{stdSetSn}
		<if test="effectLocation == 'wrd'">
		and t1.word_sn in (select word_sn from META_WORD_WRD where wrd_sn = #{wrdSn} and std_set_sn = #{stdSetSn})
		</if>
		<if test="effectLocation == 'word'">
		and t1.word_sn in (select word_sn from META_WORD_WRD where word_sn = #{wordSn})
		</if>
		and t1.del_yn = 'N'
		and t1.use_yn = 'Y'
		<if test='detailPageYn !="Y"'>
		limit #{cnt}
 		</if>
	</select>
	
	<!-- 표준변경영향도상세 - 단어 -->
	<select id="selectStdDicaryChangeWrdEffecList" resultType="sangsMap" parameterType="map">
		select
			distinct t3.wrd_std_set_nm
			, t1.std_set_sn     
			, t1.wrd_sn         
			, t1.wrd_nm         
			, t1.wrd_eng_nm     
			, t1.wrd_eng_abrv_nm
			, t1.prhibt_yn
			, t1.std_wrd_nm
			, t1.rel_wrd_nm  
			, fn_get_cmmn_code_nm('CONFMCDTY', t1.aprv_sttus_cd) as aprv_sttus_cd_nm
			, fn_get_cmmn_code_nm('WRDCDTY', t1.wrd_ty_cd) as wrd_ty_cd_nm
		from
			META_WRD t1
		join (
			select std_set_sn 
				, std_set_nm as wrd_std_set_nm
			from META_STD_SET
			where del_yn = 'N'
			and use_yn = 'Y' ) t3 on t1.std_set_sn = t3.std_set_sn
		join (
			select std_set_sn
				, wrd_refrn_std_set_sn
				, wrd_sn 
			from META_WORD_WRD 
			where std_set_sn = #{stdSetSn}
		) t4 on t1.std_set_sn = t4.wrd_refrn_std_set_sn and t1.wrd_sn = t4.wrd_sn
		where 1 = 1 
			and t1.wrd_sn in (
				select t2.wrd_sn
				from META_WORD t1
					join (
						select t1.std_set_sn
							, t1.wrd_refrn_std_set_sn
							, t1.word_sn
							, t1.wrd_sn
						from META_WORD_WRD t1
							, META_WRD t2
						where t1.wrd_refrn_std_set_sn = t2.std_set_sn
						and t1.wrd_sn = t2.wrd_sn
					) t2 on t1.word_sn = t2.word_sn and t1.std_set_sn = t2.std_set_sn
				where
				<if test="effectLocation == 'domn'">
				t1.domn_sn = #{domnSn}
				</if>
				<if test="effectLocation == 'word'">
				t1.word_sn = #{wordSn}
				</if> 
				and t1.std_set_sn = #{stdSetSn}
				and del_yn = 'N'
				and use_yn = 'Y'
			)
		and t1.use_yn = 'Y'
		and t1.del_yn = 'N'
		<if test='detailPageYn !="Y"'>
		limit #{cnt}
 		</if>
	</select>
	
	<!-- 도메인명 중복 카운트 -->
	<select id="selectCheckDuplDomnNmCnt" resultType="Integer" parameterType="map">
		select 
			count(*) as cnt
		from META_DOMN t1
			, META_STD_SET t2
		where t1.STD_SET_SN = t2.STD_SET_SN
			and t1.DOMN_NM = #{domnNm}
			and t2.STD_SET_SN = #{stdSetSn}
			and t1.USE_YN = 'Y'
			and t1.DEL_YN = 'N'
	</select>
	
	<!-- 표준사전 용어 히스토리 정보 조회 -->
	<select id="selectStdDicaryWordHistInfo" resultType="sangsMap" parameterType="map">
		select 
			rqst_dt
			, reg_user_id
			, aftch_cn
			, prcs_se_cd
			, reg_dt
		from META_WORD_HIST
		where 1 = 1 
			and word_sn = #{wordSn}
			and std_set_sn = #{stdSetSn}
			and aprv_sttus_cd = #{aprvSttusCd}
			and word_copy_sn is null
		order by word_hist_sn desc limit 1
	</select>
	<!-- 표준사전 도메인 히스토리 정보 조회 -->
	<select id="selectStdDicaryDomnHistInfo" resultType="sangsMap" parameterType="map">
		select 
			rqst_dt
			, reg_user_id
			, aftch_cn
			, prcs_se_cd
			, reg_dt
		from META_DOMN_HIST
		where 1 = 1 
			and domn_sn = #{domnSn}
			and std_set_sn = #{stdSetSn}
			and aprv_sttus_cd = #{aprvSttusCd}
			and domn_copy_sn is null
		order by domn_hist_sn desc limit 1
	</select>
	<!-- 표준사전 단어 히스토리 정보 조회 -->
	<select id="selectStdDicaryWrdHistInfo" resultType="sangsMap" parameterType="map">
		select 
			rqst_dt
			, reg_user_id
			, bfchg_cn
			, aftch_cn
			, prcs_se_cd
			, reg_dt
			, wrd_copy_sn
		from META_WRD_HIST
		where 1 = 1 
			and wrd_sn = #{wrdSn} 
			and std_set_sn = #{stdSetSn}
			and aprv_sttus_cd = #{aprvSttusCd}
			and wrd_copy_sn is null
		order by wrd_hist_sn desc limit 1
	</select>
	
	
	<!-- 표준사전 단어 복사 채번 -->
	<select id="selectNextStdDicaryWrdCopySn" resultType="Integer" parameterType="map">
		select 
			ifnull(max(wrd_copy_sn), 0) + 1
		from META_WRD_COPY
		where std_set_sn = #{stdSetSn}
	</select>
	<!-- 표준사전 단어 복사 등록 -->
	<insert id="insertStdDicaryWrdCopyInfo" parameterType="map">
		insert into META_WRD_COPY (
			wrd_copy_sn
			,std_set_sn
			, wrd_sn
			, wrd_nm
			, wrd_eng_nm
			, wrd_eng_abrv_nm
			, prhibt_yn
			, rel_wrd_nm
			, wrd_cn
			, wrd_ty_cd
			, use_yn
			, del_yn
			, aprv_sttus_cd
			, prcs_se_cd
			, reg_user_id
			, reg_dt
			, chg_user_id
			, chg_dt
			, std_wrd_nm
		) values (
			#{wrdCopySn}
			, #{stdSetSn}
			, #{wrdSn}
			, #{wrdNm}
			, #{wrdEngNm}
			, #{wrdEngAbrvNm}
			, #{prhibtYn}
			, #{relWrdNm}
			, #{wrdCn}
			, #{wrdTyCd}
			, #{useYn}
			, #{delYn}
			, #{aprvSttusCd}
			, #{prcsSeCd}
			, #{regUserId}
			, #{regDt}
			, #{chgUserId}
			, #{chgDt}
			, #{stdWrdNm}
		)
	</insert>
	
	<!-- 표준사전 도메인 복사 채번 -->
	<select id="selectNextStdDicaryDomnCopySn" resultType="Integer" parameterType="map">
		select 
			ifnull(max(domn_copy_sn), 0) + 1
		from META_DOMN_COPY
		where std_set_sn = #{stdSetSn}
	</select>
	<!-- 표준사전 도메인 복사 등록 -->
	<insert id="insertStdDicaryDomnCopyInfo" parameterType="map">
		insert into META_DOMN_COPY (
			domn_copy_sn
			, std_set_sn
			, domn_sn
			, domn_group_sn
			, domn_cl_nm
			, domn_nm
			, domn_cn
			, data_ty_cd
			, data_lt_value
			, data_dcmlpoint_lt_value
			, data_mumm_value
			, data_mxmm_value
			, use_yn
			, del_yn
			, aprv_sttus_cd
			, prcs_se_cd
			, reg_user_id
			, reg_dt
			, chg_user_id
			, chg_dt
		) values (
			#{domnCopySn}
			, #{stdSetSn}
			, #{domnSn}
			, #{domnGroupSn}
			, #{domnClNm}
			, #{domnNm}
			, #{domnCn}
			, #{dataTyCd}
			, #{dataLtValue}
			, #{dataDcmlpointLtValue}
			, #{dataMummValue}
			, #{dataMxmmValue}
			, #{useYn}
			, #{delYn}
			, #{aprvSttusCd}
			, #{prcsSeCd}
			, #{regUserId}
			, #{regDt}
			, #{chgUserId}
			, #{chgDt}
		)
	</insert>	
	
	<!-- 표준사전 용어 복사 채번 -->
	<select id="selectNextStdDicaryWordCopySn" resultType="Integer" parameterType="map">
		select 
			ifnull(max(word_copy_sn), 0) + 1
		from META_WORD_COPY
		where std_set_sn = #{stdSetSn}
	</select>
	<!-- 표준사전 용어 복사 등록 -->
	<insert id="insertStdDicaryWordCopyInfo" parameterType="map">
		insert into META_WORD_COPY (
			word_copy_sn
			, std_set_sn
			, word_sn
			, domn_refrn_std_set_sn
			, domn_sn
			, word_nm
			, word_eng_nm
			, word_eng_abrv_nm
			, rel_word_nm
			, word_cn
			, word_ty_cd
			, prhibt_yn
			, use_yn
			, del_yn
			, aprv_sttus_cd
			, prcs_se_cd
			, reg_user_id
			, reg_dt
			, chg_user_id
			, chg_dt
		) values (
			#{wordCopySn}
			, #{stdSetSn}
			, #{wordSn}
			, #{domnRefrnStdSetSn}
			, #{domnSn}
			, #{wordNm}
			, #{wordEngNm}
			, #{wordEngAbrvNm}
			, #{relWordNm}
			, #{wordCn}
			, #{wordTyCd}
			, #{prhibtYn}
			, #{useYn}
			, #{delYn}
			, #{aprvSttusCd}
			, #{prcsSeCd}
			, #{regUserId}
			, #{regDt}
			, #{chgUserId}
			, #{chgDt}
		)
	</insert>	
	
	<!-- 표준사전 단어 복사 상세 정보 -->
	<select id="selectStdDicaryWrdCopyInfo" resultType="sangsMap" parameterType="map">
		select 
			wrd_copy_sn
			,std_set_sn
			, wrd_sn
			, wrd_nm
			, wrd_eng_nm
			, wrd_eng_abrv_nm
			, prhibt_yn
			, rel_wrd_nm
			, wrd_cn
			, wrd_ty_cd
			, use_yn
			, del_yn
			, aprv_sttus_cd
			, prcs_se_cd
			, reg_user_id
			, reg_dt
			, chg_user_id
			, chg_dt
			, std_wrd_nm
		from META_WRD_COPY
		where 1 = 1 
			and wrd_sn = #{wrdSn} 
			and std_set_sn = #{stdSetSn}
		order by wrd_copy_sn desc limit 1
	</select>
	
	<!-- 표준사전 도메인 복사 상세 정보 -->
	<select id="selectStdDicaryDomnCopyInfo" resultType="sangsMap" parameterType="map">
		select
			domn_copy_sn
			, std_set_sn
			, domn_sn
			, domn_group_sn
			, domn_cl_nm
			, domn_nm
			, domn_cn
			, data_ty_cd
			, data_lt_value
			, data_dcmlpoint_lt_value
			, data_mumm_value
			, data_mxmm_value
			, use_yn
			, del_yn
			, aprv_sttus_cd
			, prcs_se_cd
			, reg_user_id
			, reg_dt
			, chg_user_id
			, chg_dt
		from META_DOMN_COPY
		where 1 = 1
			and domn_sn = #{domnSn}
			and std_set_sn = #{stdSetSn}
		order by domn_copy_sn desc limit 1
	</select>
	
	<!-- 표준사전 용어 복사 상세 정보 -->
	<select id="selectStdDicaryWordCopyInfo" resultType="sangsMap" parameterType="map">
		select
			word_copy_sn
			, std_set_sn
			, word_sn
			, domn_refrn_std_set_sn
			, domn_sn
			, word_nm
			, word_eng_nm
			, word_eng_abrv_nm
			, rel_word_nm
			, word_cn
			, word_ty_cd
			, prhibt_yn
			, use_yn
			, del_yn
			, aprv_sttus_cd
			, prcs_se_cd
			, reg_user_id
			, reg_dt
			, chg_user_id
			, chg_dt
		from META_WORD_COPY
		where 1 = 1
			and word_sn = #{wordSn}
			and std_set_sn = #{stdSetSn}
		order by word_copy_sn desc limit 1
	</select>
	
	<!-- 표준사전 단어 되돌리기 -->
	<update id="updateStdDicaryWrdRtnInfo" parameterType="map">
		update META_WRD
		set chg_dt = now()
			, wrd_ty_cd = #{wrdTyCd}
			, wrd_nm = #{wrdNm}
			, wrd_eng_nm = #{wrdEngNm}
			, wrd_eng_abrv_nm = #{wrdEngAbrvNm}
			, prhibt_yn = #{prhibtYn}
			, std_wrd_nm = #{stdWrdNm}
			, rel_wrd_nm = #{relWrdNm}
			, wrd_cn = #{wrdCn}
			, use_Yn = #{useYn}
			, del_yn = #{delYn}
			, aprv_sttus_cd = #{aprvSttusCd}
			, prcs_se_cd = #{prcsSeCd}
			, reg_dt = #{regDt}
			, chg_user_id = #{chgUserId}
			, chg_user_id = #{regUserId}
		where std_set_sn = #{stdSetSn}
			and wrd_sn = #{wrdSn}
	</update>
	
	<!-- 표준사전 도메인 되돌리기 -->
	<update id="updateStdDicaryDomnRtnInfo" parameterType="map">
		update META_DOMN
		set chg_dt = now()
			, domn_group_sn = #{domnGroupSn}
			, domn_nm = #{domnNm}
			, domn_cn = #{domnCn}
			, data_ty_cd = #{dataTyCd}
			, data_lt_value = #{dataLtValue}
			, data_dcmlpoint_lt_value = #{dataDcmlpointLtValue}
			, data_mumm_value = #{dataMummValue}
			, data_mxmm_value = #{dataMxmmValue}
			, use_Yn = #{useYn}
			, del_yn = #{delYn}
			, aprv_sttus_cd = #{aprvSttusCd}
			, prcs_se_cd = #{prcsSeCd}
			, reg_dt = #{regDt}
			, chg_user_id = #{chgUserId}
			, chg_user_id = #{regUserId}
		where std_set_sn = #{stdSetSn}
			and domn_sn = #{domnSn}
	</update>
	
	<!-- 표준사전 용어 되돌리기 -->
	<update id="updateStdDicaryWordRtnInfo" parameterType="map">
		update META_WORD
		set chg_dt = now()
			, word_ty_cd = #{wordTyCd}
			, domn_sn = #{domnSn}
			, domn_refrn_std_set_sn = #{domnRefrnStdSetSn}
			, word_nm = #{wordNm}
			, word_eng_nm = #{wordEngNm}
			, word_eng_abrv_nm = #{wordEngAbrvNm}
			, prhibt_yn = #{prhibtYn}
			, rel_word_nm = #{relWordNm}
			, word_cn = #{wordCn}
			, use_Yn = #{useYn}
			, del_yn = #{delYn}
			, aprv_sttus_cd = #{aprvSttusCd}
			, chg_user_id = #{regUserId}
		where std_set_sn = #{stdSetSn}
			and word_sn = #{wordSn}
	</update>
	
	<!-- 용어-단어 매핑목록 조회 -->
	<select id="getStdDicaryWordWrdList" resultType="sangsMap" parameterType="map">
		select
			t1.STD_SET_SN
			, t1.WORD_SN
			, t1.WRD_SORT_SN
			, t3.WORD_NM
			, t2.WRD_SN
			, t2.WRD_ENG_ABRV_NM
			, t2.WRD_NM
			, t2.WRD_ENG_ABRV_NM
		from META_WORD_WRD t1
			, META_WRD t2
			, META_WORD t3
			, (<include refid="my_std_set_nm"/> ) t4 
		where t1.WRD_REFRN_STD_SET_SN = t2.STD_SET_SN
			and t1.STD_SET_SN = t3.STD_SET_SN
			and t1.WORD_SN = t3.WORD_SN
			and t1.WRD_SN = t2.WRD_SN
			and t1.STD_SET_SN = t4.STD_SET_SN
			and t2.DEL_YN = 'N'
			and t2.USE_YN = 'Y'
			and t3.DEL_YN = 'N'
			and t3.USE_YN = 'Y'
		order by t1.STD_SET_SN, t1.WORD_SN, t1.WRD_SORT_SN
	</select>
	
	
</mapper>