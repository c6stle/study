<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="meta_code">



	<!-- 표준사전 도메인 그룹 -->
	<select id="selectDomnGroupCodeList" resultType="sangsMap" parameterType="sangsMap">
		select 
			domn_group_sn as code
			, domn_group_nm as code_nm
		from META_DOMN_GROUP
		where del_yn = 'N'
		order by sort_sn
	</select>
	
	<!-- 표준사전 도메인 그룹 -->
	<select id="selectDomnNmList" resultType="sangsMap" parameterType="sangsMap">
		select
			t1.domn_sn as code
			, t1.domn_group_sn as extval
			, t1.domn_nm as code_nm
			, t1.std_set_sn as extval2
		from META_DOMN t1
			join META_DOMN_GROUP t2
		where 1 = 1
			and t1.use_yn ='Y'
			and t1.del_yn ='N'
			and t1.aprv_sttus_cd = 'APPROVAL'
			and t1.std_set_sn = #{stdSetSn}
			and t1.domn_group_sn = t2.domn_group_sn
			and t2.del_yn ='N'
		order by t2.sort_sn, t1.domn_sn
	</select>

	<!-- 표준사전 표준세트 조회 -->	
	<select id="selectStdSetList" resultType="sangsMap" parameterType="sangsMap">
		select 
			std_set_sn as code
			, std_set_nm as code_nm
		from META_STD_SET
		where 1 = 1
			and use_yn ='Y'
			and del_yn = 'N'
			and (std_set_ty_cd = 'COMMON') or (std_set_sn = #{stdSetSn})
	</select>
	
	<!-- 프로젝트 연결 DBMS 순번 조회 -->	
	<select id="selectPrjectCnncDbmsSnList" resultType="sangsMap" parameterType="sangsMap">
		select t1.datatype_nm code
			, t1.datatype_nm code_nm
		from META_DBMS_DOMN_DATATYPE_INFO t1
			join (
				select t1.prjct_sn
					, t1.dbms_cnnc_sn
					, t2.dbms_sn
				from CMMN_PRJCT t1
				left join (
					select t1.dbms_sn
						, t1.dbms_cnnc_sn
						, t2.dbms_nm
					from CMMN_PRJCT_DBMS_CNNC_INFO t1
						join CMMN_PRJCT_DBMS t2 on t1.dbms_sn = t2.dbms_sn 
				) t2 on	t1.dbms_cnnc_sn = t2.dbms_cnnc_sn
				where t1.prjct_sn = #{prjctSn}
					and t1.del_yn = 'N'
			) t2 on	t1.dbms_sn = t2.dbms_sn 
			, META_DBMS_DOWN_DATATYPE_GROUP t3
		where 1 = 1
			and t1.use_yn = 'Y'
			and t3.del_yn = 'N'
			and t1.datatype_group_sn = t3.datatype_group_sn
		order by t1.datatype_group_sn
	</select>
	
	<!-- 표준사전 DBMS별 데이터타입 목록 조회 -->	
	<select id="selectDbmsDatatypeList" resultType="sangsMap" parameterType="sangsMap">
		select t1.datatype_nm
			, t1.use_yn
		from META_DBMS_DOMN_DATATYPE_INFO t1
			, META_DBMS_DOWN_DATATYPE_GROUP t2
		where 1 = 1
			and t1.datatype_group_sn = t2.datatype_group_sn
			and t2.del_yn = 'N'
			and t1.dbms_sn = #{dbmsSn}
		<if test="datatypeGroupSn != '' and datatypeGroupSn != null ">
			and t1.datatype_group_sn = #{datatypeGroupSn}
		</if>
		order by t1.datatype_group_sn
	</select>
	
	<!-- 표준사전 데이터타입그룹 목록 조회 -->	
	<select id="selectDatatypeGroupList" resultType="sangsMap" parameterType="sangsMap">
		select datatype_group_nm
			, datatype_group_sn
		from META_DBMS_DOWN_DATATYPE_GROUP
		where del_yn = 'N'
		order by datatype_group_sn
	</select>
	
	<!-- 표준사전 데이터타입 등록 -->
	<insert id="insertStdDicaryDbmsDatatypeInfo" parameterType="map">
		insert into META_DBMS_DOMN_DATATYPE_INFO (
			dbms_sn
			, datatype_group_sn
			, datatype_nm
			, use_yn
			, reg_user_id
			, reg_dt
		) values (
			#{dbmsSn}
			, #{datatypeGroupSn}
			, #{datatypeNm}
			, #{useYn}
			, #{regUserId}
			, now() 
		)
	</insert>
	
	<!-- 표준사전 데이터타입 수정 -->
	<update id="updateStdDicaryDbmsDatatypeInfo" parameterType="map">
		update META_DBMS_DOMN_DATATYPE_INFO 
		set chg_dt = now()
			, chg_user_id = #{chgUserId}
		<if test='"N".equals(useYn)'>
			, use_yn = 'Y'
		</if>
		<if test='"Y".equals(useYn)'>
			, use_yn = 'N'
		</if>
		where dbms_sn = #{dbmsSn}
			and datatype_nm = #{datatypeNm}
	</update>
</mapper>  