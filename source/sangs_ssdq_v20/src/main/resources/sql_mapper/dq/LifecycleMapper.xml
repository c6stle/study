<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sangs.dq.mapper.LifecycleMapper">

	<sql id="where_selectLifecycleMngList">
		<if test="anlsTyCd != '' and anlsTyCd != null ">
			and anls_ty_cd like CONCAT('%',#{anlsTyCd},'%')
		</if>
		<if test="fieldNm != '' and fieldNm != null ">
			and field_nm like CONCAT('%',#{fieldNm},'%')
		</if>
		<if test="useYn != '' and useYn != null ">
			and use_yn = #{useYn}
		</if>
	</sql>
	<!-- Lifecycle 항목관리 목록 조회 -->
	<select id="selectLifecycleMngList" parameterType="map" resultType="sangsMap">
		select 
			rule_sn
			, anls_ty_cd
			, field_nm 
			, pd_value 
			, pd_cl_cd 
			, rm_cn 
			, use_yn
			, reg_dt
		from DQ_LIFECYCLE_ANLS
		where 1 = 1
		<include refid="where_selectLifecycleMngList"/>
		order by rule_sn
		limit #{pageSize} offset #{offset}
	</select>
	
	<!-- Lifecycle 항목관리 전체 목록 조회 -->
	<select id="selectLifecycleMngAllList" parameterType="map" resultType="sangsMap">
		select 
			rule_sn
			, anls_ty_cd
			, field_nm 
			, pd_value 
			, pd_cl_cd 
			, rm_cn 
			, use_yn
			, reg_dt
		from DQ_LIFECYCLE_ANLS
		order by rule_sn
	</select>
	
	
	<!-- Lifecycle 항목관리 전체 row 수 조회 -->
	<select id="selectLifecycleMngTotalCnt" parameterType="map" resultType="Integer">
		select 
			count(*)
		from DQ_LIFECYCLE_ANLS
		where 1 = 1
		<include refid="where_selectLifecycleMngList"/>
	</select>
	
	
	<!-- Lifecycle 항목관리 목록 상세 조회 -->
	<select id="selectLifecycleMngInfo" parameterType="map" resultType="SangsMap">
		select 
			rule_sn
			, anls_ty_cd
			, field_nm 
			, pd_value 
			, pd_cl_cd 
			, rm_cn 
			, use_yn
			, reg_dt
		from DQ_LIFECYCLE_ANLS
		where 1 = 1
		and rule_sn = #{ruleSn}
	</select>
	
	
	<!-- Lifecycle 항목관리 규칙 아이디 생성 -->
	<select id="selectNextAnlsSn" parameterType="map" resultType="Integer">
		select
			max(rule_sn) + 1
		from DQ_LIFECYCLE_ANLS
	</select>
	
	<!-- Lifecycle 항목관리 목록 등록 -->
	<insert id="insertLifecycleMngInfo" parameterType="map" > 
		insert into DQ_LIFECYCLE_ANLS ( 
			rule_sn
			, anls_se_cd
			, anls_ty_cd
			, pttrn_se_cd
			, field_nm
			, pd_cl_cd
			, pd_value
			, rm_cn
			, use_yn
			, reg_dt
		) values (
			#{ruleSn}
			, #{anlsSeCd}
			, #{anlsTyCd}
			, #{pttrnSeCd}
			, #{fieldNm}
			, #{pdClCd}
			, #{pdValue}
			, #{rmCn}
			, #{useYn}
			, now()
		)
	</insert>
	
	
	
	<!-- Lifecycle 항목관리 목록 수정 -->
	<update id="updateLifecycleMngInfo" parameterType="map">
		update DQ_LIFECYCLE_ANLS
		set
			anls_ty_cd = #{anlsTyCd}
			, field_nm = #{fieldNm}
			, pd_cl_cd = #{pdClCd}
			, pd_value = #{pdValue}
			, rm_cn = #{rmCn}
			, use_yn = #{useYn} 
		where 
			rule_sn = #{ruleSn}
	</update>
	
	
	<!-- Lifecycle 진단 정보 등록 -->
	<insert id="insertLifecycleDiagnosisInfo" parameterType="map" > 
		insert into DQ_LIFECYCLE_TBL
		(	dbms_cnnc_sn
			, prjct_sn
			, dgnss_info_id
			, dgnss_nm
			, schema_nm
			, trgt_cnt
			, exc_bgng_dt
			, exc_sttus_cd
			, reg_dt
		)values(
			#{dbmsCnncSn}
			, #{prjctSn}
			, #{dgnssInfoId}
			, #{dgnssNm}
			, #{dbmsDatabaseNm}
			, #{trgtCnt}
			, NOW()
			, #{excSttusCd}
			, NOW()
		)
	</insert>
	
	<!-- Lifecycle 진단 정보 수정 -->
	<update id="updateLifecycleDiagnosisInfo" parameterType="map">
		update DQ_LIFECYCLE_TBL
		set exc_end_dt = now()
			, exc_sttus_cd = #{excSttusCd}
		where 1=1
		and dgnss_info_id = #{dgnssInfoId}
		and dgnss_nm = #{dgnssNm}
		and prjct_sn = #{prjctSn}
	</update>
	
	
	<!-- Lifecycle 테이블별 진단 항목별 진단 정보 등록 -->
	<insert id="insertLifecycleDiagnosisTableInfo" parameterType="map">
		insert into DQ_LIFECYCLE_ANLS_TAB_INFO
		(	prjct_sn
			, dbms_cnnc_sn
			, dgnss_info_id
			, tbl_nm
			, rule_sn
			, col_nm
			, tot_cnt
			, mtchg_cnt
			, excess_cnt
			, reg_dt
		)values(
			#{prjctSn}
			, #{dbmsCnncSn}
			, #{dgnssInfoId}
			, #{dbmsTableNm}
			, #{ruleSn}
			, #{columnNm}
			, #{totalCnt}
			, #{mtchgCnt}
			, #{excessCnt}
			, NOW()
		)
	</insert>
	
	<!-- Lifecycle 테이블별 진단 항목별 진단 에러정보 등록 -->
	<insert id="insertLifecycleDiagnosisTableErrInfo" parameterType="map">
		insert into DQ_LIFECYCLE_ANLS_TAB_ERR
		(	prjct_sn
			, dbms_cnnc_sn
			, dgnss_info_id
			, col_nm
			, rule_sn
			, dgnss_err_id
			, schema_nm
			, tbl_nm
			, err_nm
			, err_cn
			, reg_dt
		)values(
			#{prjctSn}
			, #{dbmsCnncSn}
			, #{dgnssInfoId}
			, #{columnNm}
			, #{ruleSn}
			, #{dgnssErrId}
			, #{dbmsDatabaseNm}
			, #{dbmsTableNm}
			, #{errNm}
			, #{errCn}
			, NOW()
		)
	</insert>	
	
	
	<!-- Lifecycle 진단 결과 목록 조회 -->
	<select id="selectLifecycleDiagnosisResultList" parameterType="map" resultType="sangsMap">
		select
			prjct_sn
			, dbms_cnnc_sn
			, dgnss_info_id
			, dgnss_nm
			, schema_nm as dbms_database_nm
			, trgt_cnt as table_cnt
			, DATE_FORMAT(exc_bgng_dt, '%Y-%m-%d %H:%i:%s') as exc_bgng_dt
			, DATE_FORMAT(exc_end_dt, '%Y-%m-%d %H:%i:%s') as exc_end_dt
			, CONCAT((CASE WHEN TIMESTAMPDIFF(second, exc_bgng_dt, exc_end_dt) = '0'
							THEN 1
							ELSE TIMESTAMPDIFF(second, exc_bgng_dt, exc_end_dt)
							END ), 's') as work_time
			, exc_sttus_cd as exc_sttus_cd
			, reg_dt
		from
			DQ_LIFECYCLE_TBL
		where prjct_sn = #{prjctSn}
		order by reg_dt desc
		limit #{pageSize} offset #{offset}
	</select>
	
	
	<!-- Lifecycle 진단 결과 전체 row 수 조회 -->
	<select id="selectLifecycleDiagnosisResultTotalCnt" parameterType="map" resultType="Integer">
		select
			count(*)
		from
			DQ_LIFECYCLE_TBL
		where prjct_sn = #{prjctSn}
	</select>
	
	<!-- Lifecycle 진단 결과 목록 상세 조회 -->
	<select id="selectLifecycleDiagnosisResultInfo" parameterType="map" resultType="sangsmap">
		select * 
			, ROUND((tot_mtchg_cnt / tot_cnt) * 100, 2) AS mtchg_per
			, ROUND((tot_excess_cnt / tot_cnt) * 100, 2) AS excess_per
			, ROUND(((tot_cnt - (tot_mtchg_cnt + tot_excess_cnt)) / tot_cnt) * 100, 2) AS err_per
			, (tot_cnt - (tot_mtchg_cnt + tot_excess_cnt)) tot_err_cnt 
		from (
			select
				t1.prjct_sn
				, t1.dbms_cnnc_sn
				, t1.dgnss_info_id
				, t1.dgnss_nm
				, t1.schema_nm as dbms_database_nm
				, t1.trgt_cnt as table_cnt
				, (select SUM(TOT_CNT) from DQ_LIFECYCLE_ANLS_TAB_INFO t01 where t01.DGNSS_INFO_ID = t1.DGNSS_INFO_ID) as tot_cnt
				, (select SUM(MTCHG_CNT) from DQ_LIFECYCLE_ANLS_TAB_INFO t01 where t01.DGNSS_INFO_ID = t1.DGNSS_INFO_ID) as tot_mtchg_cnt
				, (select SUM(EXCESS_CNT) from DQ_LIFECYCLE_ANLS_TAB_INFO t01 where t01.DGNSS_INFO_ID = t1.DGNSS_INFO_ID) as tot_excess_cnt
				, DATE_FORMAT(t1.exc_bgng_dt, '%Y-%m-%d %H:%i:%s') as exc_bgng_dt
				, CONCAT((CASE WHEN TIMESTAMPDIFF(second, t1.exc_bgng_dt, t1.exc_end_dt) = '0'
								THEN 1
								ELSE TIMESTAMPDIFF(second, t1.exc_bgng_dt, t1.exc_end_dt)
								END ), 's') as work_time
			from
				DQ_LIFECYCLE_TBL t1
			where 1=1
			and prjct_sn = #{prjctSn}
			and dbms_cnnc_sn = #{dbmsCnncSn}
			and dgnss_info_id = #{dgnssInfoId}
		) a
	</select>
	
	<!-- Lifecycle 진단 결과 목록 상세 테이블 목록 조회 -->
	<select id="selectLifecycleDiagnosisResultTableList" parameterType="map" resultType="sangsmap">
		select 
			t1.tbl_nm as dbms_table_nm
			, t1.col_nm
			, t1.tot_cnt
			, t1.mtchg_cnt
			, t1.excess_cnt
			, (t1.tot_cnt - (t1.mtchg_cnt + t1.excess_cnt)) as err_cnt
			, t1.rule_sn 
			, t2.field_nm
			, t2.pd_value 
			, t2.pd_cl_cd
		from DQ_LIFECYCLE_ANLS_TAB_INFO t1 
			left outer join DQ_LIFECYCLE_ANLS t2 on t1.rule_sn =t2.rule_sn
		where 1=1
			and t1.prjct_sn = #{prjctSn}
			and t1.dbms_cnnc_sn = #{dbmsCnncSn}
			and t1.dgnss_info_id = #{dgnssInfoId}
	</select>
	
	<!-- Lifecycle 진단 결과 오류 목록 상세 테이블 목록 조회 -->
	<select id="selectLifecycleDiagnosisResultErrTableList" parameterType="map" resultType="sangsmap">
		select 
			t1.col_nm
			, t1.rule_sn
			, t1.tbl_nm
			, t1.err_nm
			, t1.err_cn 
			, t2.field_nm
		from DQ_LIFECYCLE_ANLS_TAB_ERR t1
			, DQ_LIFECYCLE_ANLS t2
		where 1 = 1
			and t1.rule_sn = t2.rule_sn
			and t1.prjct_sn = #{prjctSn}
			and t1.dbms_cnnc_sn = #{dbmsCnncSn}
			and t1.dgnss_info_id = #{dgnssInfoId}
	</select>
</mapper>