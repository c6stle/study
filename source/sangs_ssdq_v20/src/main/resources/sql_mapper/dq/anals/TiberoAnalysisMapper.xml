<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
						"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Tibero.AnalysisMapper">
	
	<!-- 테이블 row 데이터 목록 조회 -->
	<select id="selectTableRowDataList" resultType="sangsMap" parameterType="map">
		select * from ${dbmsDatabaseNm}.${dbmsTableNm}
		where rownum <![CDATA[<=]]> ${rowCnt}
	</select>
	
	
	<!-- 테이블 row 데이터 count 조회 -->
	<select id="selectTableRowDataCnt" resultType="Integer" parameterType="map">
		select count(*) from ${dbmsDatabaseNm}.${dbmsTableNm}
	</select>
	
	
	<!-- 테이블 구조 분석 목록 조회 -->
	<select id="selectAnalysisTableList" resultType="sangsMap" parameterType="Map">

		select
			upper(t1.table_name) as dbms_table_nm
			, t1.avg_row_len
			, t2.comments  
			, (
				select count(*)
			    from USER_CONSTRAINTS t01
			    	, USER_CONS_COLUMNS t02
			    where 1=1
			    	and t01.constraint_name = t02.constraint_name
			    	and t01.table_name = t1.table_name
			    	and t01.constraint_type = 'P'
			  ) as pk_cnt
			, (
				select count(distinct(index_name)) 
				from ALL_IND_COLUMNS
				where table_name = t1.table_name
			  ) as index_cnt
		from 
			ALL_TABLES t1, ALL_TAB_COMMENTS t2
		where 1=1 
	    	and t1.owner = t2.owner
	    	and t1.table_name = t2.table_name 
	    	and upper(t1.owner) = upper(#{dbmsDatabaseNm})
	 	order by t1.table_name

	</select>
	
	
	<!-- 컬럼 구조 분석 목록 조회 -->
	<select id="selectAnalysisTableColumnList" resultType="sangsMap" parameterType="Map">
	 	
	 	select
	 		t1.owner as dbms_database_nm
		    , upper(t1.table_name) as dbms_table_nm
			, upper(t2.column_name) as column_name
	 		, t1.column_id 
		    , t1.data_type
		    , t1.data_length
		    , t1.data_precision
		    , t1.data_scale
		    , t1.nullable
		    , t1.data_default
    		, t2.comments   
		from 
			ALL_TAB_COLUMNS t1
			, ALL_COL_COMMENTS t2
		where 1 = 1
			and t1.owner = t2.owner
			and t1.table_name = t2.table_name
			and t1.column_name = t2.column_name
			and upper(t1.owner) = upper(#{dbmsDatabaseNm})
			<if test="dbmsTableNm != '' and dbmsTableNm != null ">
			and upper(t1.table_name) = upper(#{dbmsTableNm})
			</if>
		order by t1.table_name, t1.column_id
			
	</select>
	
	<!-- 컬럼별 최댓값 and 최솟값 조회 -->
	<select id="selectAnalysisColumnsMaxAndMinValue" resultType="sangsMap" parameterType="map">
		select
			${columnNm}
		from ${dbmsDatabaseNm}.${dbmsTableNm}
	</select>
	
	
	<!-- 컬럼별 데이터 조회(limit) -->
	<select id="selectAnalysisColumnValueWithLimit" resultType="map" parameterType="map">
		select
			${columnName} as col_val
		from ${dbmsDatabaseNm}.${dbmsTableNm}
		<if test="limitCount != '' and limitCount != null">
		where #{limitCount} >= rownum
		</if>
	</select>
	
	
	<!-- 사용자정의 SQL -->
	<select id="selectUserCheckSql" resultType="Integer" parameterType="Map">
		select 
			count(*)
		from ${dbmsDatabaseNm}.${dbmsTableNm}
		where ${whereValue}
	</select>
	
	
	<!-- 라이프사이클 분석 컬럼 MtchgCnt -->
	<select id="selectLifecycleAnalysisMtchgCnt" parameterType="map" resultType="Integer">
		select 
			count(*)
		from
			(
			select 
				${columnNm}
			from ${dbmsDatabaseNm}.${dbmsTableNm}
			where ${columnNm} is not null
			) t1
		${whereParam}<![CDATA[>=]]>#{chkDate}
	</select>
	
	<!-- 라이프사이클 분석 컬럼 missCnt -->
	<select id="selectLifecycleAnalysisMissCnt" parameterType="map" resultType="Integer">
		select 
			count(*)
		from
			(
			select 
				${columnNm}
			from ${dbmsDatabaseNm}.${dbmsTableNm}
			where ${columnNm} is not null
			) t1
		${whereParam}<![CDATA[<]]>#{chkDate}
	</select>
	
	
	
	
	
	<!-- 테이블 row 데이터 count 조회 -->
	<select id="selectDgnssDataRowCnt" resultType="Integer" parameterType="map">
		select count(*) from ${schemaNm}.${tblNm}
		where 1 = 1
		<if test="dataCndValue != '' and dataCndValue != null">
			<include refid="where_datacndvalue"/>
		</if>
	</select>
	
	
	<!-- 진단 Unique Count 결과 목록 -->
	<select id="selectDgnssUniqueCnt" resultType="Integer" parameterType="map">
		select count(*) as cnt 
		from(
			select count(*) 
			from ${schemaNm}.${tblNm}
			where 1 = 1
			<if test="dataCndValue != '' and dataCndValue != null">
				<include refid="where_datacndvalue"/>
			</if>
			group by ${colNm}
			having count(*) = 1
		) t1
	</select>
	
	<!-- 진단 Duplicate Count 결과 목록 -->
	<select id="selectDgnssDuplicateCnt" resultType="Integer" parameterType="map">
		select nvl(sum(t1.cnt), 0)
		from (
			select 
				${colNm}
				, count(*) as cnt
			from
				${schemaNm}.${tblNm}
			where
				${colNm} is not null
				<if test="dataCndValue != '' and dataCndValue != null">
					<include refid="where_datacndvalue"/>
				</if>
			group by ${colNm}
			having count(*) > 1 
		) t1
	</select>
	
	<!-- 진단 Distinct Count 결과 목록 -->
	<select id="selectDgnssDistinctCnt" resultType="Integer" parameterType="map">
		select count(*) as cnt 
		from (
			select
				distinct ${colNm}
			from ${schemaNm}.${tblNm}
			where 1 = 1
			<if test="dataCndValue != '' and dataCndValue != null">
				<include refid="where_datacndvalue"/>
			</if>
		) t1
	</select>
	
	<!-- 진단 NULL Count 결과 목록 -->
	<select id="selectDgnssNullCnt" resultType="Integer" parameterType="map">
		select count(*) as cnt
		from ${schemaNm}.${tblNm}
		where ${colNm} is null
		<if test="dataCndValue != '' and dataCndValue != null">
			<include refid="where_datacndvalue"/>
		</if>
	</select>
	
	<!-- 진단 Blank Count 결과 목록 -->
	<select id="selectDgnssBlankCnt" resultType="Integer" parameterType="map">
		select count(*)	as cnt
		from ${schemaNm}.${tblNm}
		where trim(${colNm}) = ''
		and ${colNm} is not null
		<if test="dataCndValue != '' and dataCndValue != null">
			<include refid="where_datacndvalue"/>
		</if>		
	</select>
	
	<!-- 진단 빈도 결과 목록 -->
	<select id="selectDgnssFqResultList" resultType="sangsMap" parameterType="map">
		select 
			t1.data_value
			, t1.data_cnt 
		from (
			select
				rownum as rnum
				, t01.*
			from (
				select
					 substr(${colNm}, 1, 50) as data_value
					 , count(*) as data_cnt
				from ${schemaNm}.${tblNm}
				where 1 = 1
				<if test="dataCndValue != '' and dataCndValue != null">
					<include refid="where_datacndvalue"/>
				</if>
				group by ${colNm}
				order by data_cnt desc
			) t01
		) t1
		where t1.rnum between 1 and 10	
	</select>
	
	<!-- 컬럼 초과 데이터 목록 조회 -->
	<select id="selectDgnssColExcessDataList" resultType="sangsMap" parameterType="map">
		select
			${colNm}
			<foreach item="pkColNm" open="," separator="," collection="pkColNmArr">${pkColNm}</foreach>
		from
			(
			select
				*
			from (
				select
					rownum as rnum
					, t001.*
				from
					${schemaNm}.${tblNm} t001
				where 1 = 1
				<if test='nullDataDgnssYn == "N"'>
				and t001.${colNm} is not null
				</if>
				<if test="dataCndValue != '' and dataCndValue != null">
					<include refid="where_datacndvalue"/>
				</if>
				) t01
			order by t01.rnum
			) t1
		where t1.rnum between ${startRow} and ${endRow}
	</select>
	
	<!-- 컬럼 데이터 목록 조회 -->
	<select id="selectDgnssColDataList" resultType="sangsMap" parameterType="map">
		select ${colNm}
		<foreach item="pkColNm" open="," separator="," collection="pkColNmArr">${pkColNm}</foreach>
		from ${schemaNm}.${tblNm}
		where 1 = 1
		<if test='nullDataDgnssYn == "N"'>
		and ${colNm} is not null
		</if>
		<if test="dataCndValue != '' and dataCndValue != null">
			<include refid="where_datacndvalue"/>
		</if>
	</select>
	
	<!-- 사용자 정의 SQL -->
	<select id="selectDgnssUserDfnSqlCnt" resultType="Integer" parameterType="map">
		${ruleExprsnValue}
		<if test="dataCndValue != '' and dataCndValue != null">
			<include refid="where_datacndvalue"/>
		</if>
	</select>
	
	<!-- 사용자 정의 SQL 불일치 목록-->
	<select id="selectDgnssUserDfnSqlDisMtchList" resultType="sangsMap" parameterType="map">
		select ${colNm} 
		<foreach item="pkColNm" open="," separator="," collection="pkColNmArr">${pkColNm}</foreach>
		from ${schemaNm}.${tblNm} 
		where ${colNm} not in (
			${ruleExprsnValue}
		)
		<if test="dataCndValue != '' and dataCndValue != null">
			<include refid="where_datacndvalue"/>
		</if>	
	</select>
	
	<!-- 숫자 일치 범주 -->
	<select id="selectDgnssNumberCtgryMtchList" resultType="sangsMap" parameterType="map">
		select
			${colNm}
		from ${schemaNm}.${tblNm}
		where ${colNm} between ${bgngValue} and ${endValue}
		<if test="dataCndValue != '' and dataCndValue != null">
			<include refid="where_datacndvalue"/>
		</if>
	</select>
	
	<!-- 숫자 불일치 범주 -->
	<select id="selectDgnssNumberCtgryDisMtchList" resultType="sangsMap" parameterType="map">
		select
			${colNm}
			<foreach item="pkColNm" open="," separator="," collection="pkColNmArr">${pkColNm}</foreach>
		from ${schemaNm}.${tblNm}
		where ${colNm} not between ${bgngValue} and ${endValue}
		<if test="dataCndValue != '' and dataCndValue != null">
			<include refid="where_datacndvalue"/>
		</if>
	</select>


	<!-- 문자 일치 범주 -->
	<select id="selectDgnssChrctrCtgryMtchList" resultType="sangsMap" parameterType="map">
		select
			${colNm}
		from ${schemaNm}.${tblNm}
		where ${colNm} between #{bgngValue} and #{endValue}
		<if test="dataCndValue != '' and dataCndValue != null">
			<include refid="where_datacndvalue"/>
		</if>
	</select>
	
	<!-- 문자 불일치 범주 -->
	<select id="selectDgnssChrctrCtgryDisMtchList" resultType="sangsMap" parameterType="map">
		select
			${colNm}
			<foreach item="pkColNm" open="," separator="," collection="pkColNmArr">${pkColNm}</foreach>
		from ${schemaNm}.${tblNm}
		where ${colNm} not between #{bgngValue} and #{endValue}
		<if test="dataCndValue != '' and dataCndValue != null">
			<include refid="where_datacndvalue"/>
		</if>
	</select>
	
	
	<!-- 날짜 일치 범주 -->
	<select id="selectDgnssDateCtgryMtchList" resultType="sangsMap" parameterType="map">
		select
			${colNm}
		from ${schemaNm}.${tblNm}
		where to_char(${colNm},'YYYY-MM-DD') between #{bgngValue} and #{endValue}
		<if test="dataCndValue != '' and dataCndValue != null">
			<include refid="where_datacndvalue"/>
		</if>
	</select>
	
	<!-- 날짜 불일치 범주 -->
	<select id="selectDgnssDateCtgryDisMtchList" resultType="sangsMap" parameterType="map">
		select
			${colNm}
			<foreach item="pkColNm" open="," separator="," collection="pkColNmArr">${pkColNm}</foreach>
		from ${schemaNm}.${tblNm}
		where to_char(${colNm},'YYYY-MM-DD') not between #{bgngValue} and #{endValue}
		<if test="dataCndValue != '' and dataCndValue != null">
			<include refid="where_datacndvalue"/>
		</if>
	</select>
	
	
	<!-- 날짜 범주
	<select id="selectDgnssDateCtgryCnt" resultType="sangsMap" parameterType="map">
		select
			count(*)
		from ${schemaNm}.${tblNm}
		where to_char(${colNm},'YYYY-MM-DD') <![CDATA[>=]]> #{bgngValue} and to_char(${colNm},'YYYY-MM-DD') <![CDATA[<=]]> #{endValue}
	</select> -->
	
	
	<!-- pk 목록 조회 -->
	<select id="sealectPkColList" resultType="sangsMap" parameterType="map">
		select
			t1.table_name
		     , upper(t2.column_name) as column_name  
		from user_constraints t1
		     , user_cons_columns t2
		where 1 = 1
		and upper(t1.table_name) = upper(#{tblNm})
		and t1.constraint_type = 'P'
		and t1.owner = t2.owner
		and t1.constraint_name = t2.constraint_name
		order by t2.position
	</select>
	
	<sql id="where_datacndvalue">
	 	and ${dataCndValue}
	</sql>
	
</mapper>
